[{"path":"index.html","id":"information","chapter":"Information","heading":"Information","text":"open source, reproducible vignette four-day workshop use \nTargeted Learning framework statistical causal inference machine\nlearning modern “Big Data” applications. Beyond introducing Targeted\nLearning, course focuses applying methodology practice\nusing tlverse software ecosystem. \nmaterials based working draft book Targeted Learning R:\nCausal Data Science tlverse Software\nEcosystem, includes -depth\ndiscussion topics much , serve useful reference\naccompany workshop materials.\n","code":""},{"path":"index.html","id":"preliminaries","chapter":"Information","heading":"Preliminaries","text":"students workshop work software machines, \nlearn use tools practice. mind, request \nstudents complete steps 1 2 week/weekend workshop.Join Slack page dedicated workshop. invitation link\njoin: (add link).Download necessary software (instructions ). experiencing\ninstallation issues, please reach Slack “#install” channel \nleast days workshop.Software Download Information:R packages working workshop (e.g. glmnet)\nrequire R version 4.0 greater. Links install/update R can found\nhttps://cloud.r-project.org.updating R version 4.0 greater, script safely cover\npackage installations:\nhttps://github.com/tlverse/tmlcimx2021-workshop/blob/master/install.R.Installation errors likely occur. first common error R\nversion issue mentioned , second common error relates \nexceeding API rate limit GitHub packages. error message fix\ncan found :\nhttps://tlverse.org/tlverse-handbook/tlverse.html#installtlverse.can help installation issues others Slack’s #install\nchannel.","code":""},{"path":"index.html","id":"about-this-workshop","chapter":"Information","heading":"About this workshop","text":"workshop provide comprehensive introduction field \nTargeted Learning causal inference, corresponding “tlverse”\nsoftware ecosystem. Targeted Learning general\nstatistical approach unifies advances causal inference, statistical\ntheory, machine learning cohesive framework guide pre-specified\nstatistical analysis plans. Emphasis placed efficient targeted\nestimators causal effects variety interventions (personalized,\ntreatment versus control, shifting exposures).addition discussion, workshop incorporate interactive\nactivities programming exercises R language public health\ndata. course, students able use free tools \nanswer scientifically meaningful questions public health, medicine,\neconomics, .completing workshop, students able :Follow roadmap targeted learning translate meaningful research\nquestions realistic statistical estimation problems, obtain valid\ninference terms confidence intervals p-values.Reliably assess performance machine learning algorithm, compare\nperformance several algorithms applying cross-validation schemes\nusing origami R package.Ensemble combination algorithms improved super learner\nalgorithm using sl3 R package, explain combination \nbetter selecting single algorithm colleagues.Estimate (potentially causal) effect intervention population\nusing tmle3 R package.","code":""},{"path":"index.html","id":"schedule","chapter":"Information","heading":"Schedule","text":"","code":""},{"path":"index.html","id":"august-2021-the-roadmap","chapter":"Information","heading":"16 August 2021 — The Roadmap","text":"class: Please read article “Need Statistical\nRevolution”\nwatch video lecture Professors Mark van der Laan Alan Hubbard\n“Introduction Targeted Learning” (60\nmin).class: Roadmap Targeted\nLearning \nIntroduction \ntlverse.class: Please complete Roadmap Chapter\nExercises \nsubmit Moodle platform midnight 16 August.","code":""},{"path":"index.html","id":"august-2021-cross-validation","chapter":"Information","heading":"17 August 2021 — Cross-validation","text":"class: Please read “Chapter 5:\nCross-validation” \nTargeted Learning Handbook.class: Cross-validation \norigami.class: Please complete Cross-validation\nExercises\nsubmit Moodle platform midnight 17 August.","code":""},{"path":"index.html","id":"august-2021-super-learning","chapter":"Information","heading":"18 August 2021 — Super Learning","text":"class: Please read “Chapter 6: Super (Machine)\nLearning” \nTargeted Learning Handbook.class: Super (Machine) Learning \nsl3 andAfter class: Please complete Super Learning\nExercises\nsubmit Moodle platform midnight 18 August.","code":""},{"path":"index.html","id":"august-2021-targeted-maximum-likelihood-estimation-tmle","chapter":"Information","heading":"19 August 2021 — Targeted Maximum Likelihood Estimation (TMLE)","text":"class: Please read “Chapter 7: TMLE Framework” \nTargeted Learning Handbook.class: TMLE\nFrameworkAfter class: Please complete TMLE\nExercises\nsubmit Moodle platform midnight 19 August.","code":""},{"path":"index.html","id":"course-resources","chapter":"Information","heading":"Course resources","text":"Slack:Slack:Moodle: Exercises due Moodle platform four\ndays midnight.Moodle: Exercises due Moodle platform four\ndays midnight.Code: R scripts section workshop available via \nGitHub repository workshop \nhttps://github.com/tlverse/tmlcimx2021-workshop/tree/master/R_code.Code: R scripts section workshop available via \nGitHub repository workshop \nhttps://github.com/tlverse/tmlcimx2021-workshop/tree/master/R_code.Course website: main course website working\nclass, course materials, schedule, etc. can accessed.Course website: main course website working\nclass, course materials, schedule, etc. can accessed.Targeted Learning Handbook: materials based working draft\nbook Targeted Learning R: Causal Data Science tlverse\nSoftware Ecosystem, includes\n-depth discussion topics much , serve useful\nreference accompany workshop materials.Targeted Learning Handbook: materials based working draft\nbook Targeted Learning R: Causal Data Science tlverse\nSoftware Ecosystem, includes\n-depth discussion topics much , serve useful\nreference accompany workshop materials.","code":""},{"path":"index.html","id":"about-the-instructors","chapter":"Information","heading":"About the instructors","text":"","code":""},{"path":"index.html","id":"mark-van-der-laan","chapter":"Information","heading":"Mark van der Laan","text":"Mark van der Laan, PhD, Professor Biostatistics Statistics UC\nBerkeley. research interests include statistical methods computational\nbiology, survival analysis, censored data, adaptive designs, targeted maximum\nlikelihood estimation, causal inference, data-adaptive loss-based learning, \nmultiple testing. research group developed loss-based super learning \nsemiparametric models, based cross-validation, generic optimal tool \nestimation infinite-dimensional parameters, nonparametric density\nestimation prediction censored uncensored data. Building \nwork, research group developed targeted maximum likelihood estimation\ntarget parameter data-generating distribution arbitrary\nsemiparametric nonparametric models, generic optimal methodology \nstatistical causal inference. recently, Mark’s group focused \npart development centralized, principled set software tools \ntargeted learning, tlverse.","code":""},{"path":"index.html","id":"alan-hubbard","chapter":"Information","heading":"Alan Hubbard","text":"Alan Hubbard Professor Biostatistics, former head Division \nBiostatistics UC Berkeley, head data analytics core UC Berkeley’s\nSuperFund research program. current research interests include causal\ninference, variable importance analysis, statistical machine learning,\nestimation inference data-adaptive statistical target parameters, \ntargeted minimum loss-based estimation. Research group generally\nmotivated applications problems computational biology, epidemiology,\nprecision medicine.","code":""},{"path":"index.html","id":"jeremy-coyle","chapter":"Information","heading":"Jeremy Coyle","text":"Jeremy Coyle, PhD, consulting data scientist statistical programmer,\ncurrently leading software development effort produced \ntlverse ecosystem R packages related software tools. Jeremy earned \nPhD Biostatistics UC Berkeley 2016, primarily supervision\nAlan Hubbard.","code":""},{"path":"index.html","id":"nima-hejazi","chapter":"Information","heading":"Nima Hejazi","text":"Nima Hejazi PhD candidate biostatistics, working collaborative\ndirection Mark van der Laan Alan Hubbard. Nima affiliated UC\nBerkeley’s Center Computational Biology NIH Biomedical Big Data training\nprogram, well Fred Hutchinson Cancer Research Center. Previously,\nearned MA Biostatistics BA (majors Molecular Cell\nBiology, Psychology, Public Health), UC Berkeley. research\ninterests fall intersection causal inference machine learning,\ndrawing ideas non/semi-parametric estimation large, flexible\nstatistical models develop efficient robust statistical procedures \nevaluating complex target estimands observational randomized studies.\nParticular areas current emphasis include mediation/path analysis,\noutcome-dependent sampling designs, targeted loss-based estimation, vaccine\nefficacy trials. Nima also passionate statistical computing open\nsource software development applied statistics.","code":""},{"path":"index.html","id":"ivana-malenica","chapter":"Information","heading":"Ivana Malenica","text":"Ivana Malenica PhD student biostatistics advised Mark van der Laan.\nIvana currently fellow Berkeley Institute Data Science, \nserving NIH Biomedical Big Data Freeport-McMoRan Genomic Engine fellow.\nearned Master’s Biostatistics Bachelor’s Mathematics, \nspent time Translational Genomics Research Institute. broadly,\nresearch interests span non/semi-parametric theory, probability theory,\nmachine learning, causal inference high-dimensional statistics. \ncurrent work involves complex dependent settings (dependence time \nnetwork) adaptive sequential designs.","code":""},{"path":"index.html","id":"rachael-phillips","chapter":"Information","heading":"Rachael Phillips","text":"Rachael Phillips PhD student biostatistics, advised Alan Hubbard \nMark van der Laan. MA Biostatistics, BS Biology, BA \nMathematics. student targeted learning causal inference, Rachael’s\nresearch integrates semiparametric statistical estimation inference. \nmotivated applied projects current work involves personalized\nonline learning data streams vital signs, human-computer interaction,\nautomated machine learning, developing statistical analysis plans using\ntargeted learning.","code":""},{"path":"index.html","id":"repro","chapter":"Information","heading":"0.1 Reproduciblity with the tlverse","text":"tlverse software ecosystem growing collection packages, several \nquite early software lifecycle. team best \nmaintain backwards compatibility. work reaches completion, \nspecific versions tlverse packages used archived tagged \nproduce .book written using bookdown, complete\nsource available GitHub.\nversion book built R version 4.1.0 (2021-05-18),\npandoc version 2.7.3, \nfollowing packages:","code":""},{"path":"index.html","id":"setup","chapter":"Information","heading":"0.2 Setup instructions","text":"","code":""},{"path":"index.html","id":"r-and-rstudio","chapter":"Information","heading":"0.2.1 R and RStudio","text":"R RStudio separate downloads installations. R \nunderlying statistical computing environment. RStudio graphical integrated\ndevelopment environment (IDE) makes using R much easier \ninteractive. need install R install RStudio.","code":""},{"path":"index.html","id":"windows","chapter":"Information","heading":"0.2.1.1 Windows","text":"","code":""},{"path":"index.html","id":"if-you-already-have-r-and-rstudio-installed","chapter":"Information","heading":"0.2.1.1.1 If you already have R and RStudio installed","text":"Open RStudio, click “Help” > “Check updates”. new version \navailable, quit RStudio, download latest version RStudio.check version R using, start RStudio first thing\nappears console indicates version R \nrunning. Alternatively, can type sessionInfo(), also display\nversion R running. Go CRAN\nwebsite check whether \nrecent version available. , please download install . \ncan check \ninformation remove old versions system \nwish .","code":""},{"path":"index.html","id":"if-you-dont-have-r-and-rstudio-installed","chapter":"Information","heading":"0.2.1.1.2 If you don’t have R and RStudio installed","text":"Download R \nCRAN website.Run .exe file just downloadedGo RStudio download pageUnder Installers select RStudio x.yy.zzz - Windows\nXP/Vista/7/8 (x, y, z represent version numbers)Double click file install itOnce ’s installed, open RStudio make sure works don’t get \nerror messages.","code":""},{"path":"index.html","id":"macos-mac-os-x","chapter":"Information","heading":"0.2.1.2 macOS / Mac OS X","text":"","code":""},{"path":"index.html","id":"if-you-already-have-r-and-rstudio-installed-1","chapter":"Information","heading":"0.2.1.2.1 If you already have R and RStudio installed","text":"Open RStudio, click “Help” > “Check updates”. new version \navailable, quit RStudio, download latest version RStudio.check version R using, start RStudio first thing\nappears terminal indicates version R running.\nAlternatively, can type sessionInfo(), also display \nversion R running. Go CRAN\nwebsite check whether \nrecent version available. , please download install .","code":""},{"path":"index.html","id":"if-you-dont-have-r-and-rstudio-installed-1","chapter":"Information","heading":"0.2.1.2.2 If you don’t have R and RStudio installed","text":"Download R \nCRAN website.Select .pkg file latest R versionDouble click downloaded file install RIt also good idea install XQuartz (needed\npackages)Go RStudio download\npageUnder Installers select RStudio x.yy.zzz - Mac OS X 10.6+ (64-bit)\n(x, y, z represent version numbers)Double click file install RStudioOnce ’s installed, open RStudio make sure works don’t get \nerror messages.","code":""},{"path":"index.html","id":"linux","chapter":"Information","heading":"0.2.1.3 Linux","text":"Follow instructions distribution\nCRAN, provide information\nget recent version R common distributions. \ndistributions, use package manager (e.g., Debian/Ubuntu run\nsudo apt-get install r-base, Fedora sudo yum install R), \ndon’t recommend approach versions provided \nusually date. case, make sure least R 3.3.1.Go RStudio download\npageUnder Installers select version matches distribution, \ninstall preferred method (e.g., Debian/Ubuntu sudo dpkg -rstudio-x.yy.zzz-amd64.deb terminal).’s installed, open RStudio make sure works don’t get \nerror messages.setup instructions adapted written Data Carpentry: R\nData Analysis Visualization Ecological\nData.","code":""},{"path":"motivation.html","id":"motivation","chapter":"Motivation","heading":"Motivation","text":"“One enemy robust science humanity — appetite \nright, tendency find patterns noise, see supporting\nevidence already believe true, ignore facts \nfit.”— (???)Scientific research unique point history. need improve rigor\nreproducibility field greater ever; corroboration moves\nscience forward, yet growing alarm results \nreproduced report false discoveries (???). Consequences \nmeeting need result decline rate scientific\nprogression, reputation sciences, public’s trust \nfindings (???; ???).“key question want answer seeing results scientific\nstudy whether can trust data analysis.”— (???)Unfortunately, current state culture data analysis statistics\nactually enables human bias improper model selection. hypothesis\ntests estimators derived statistical models, obtain valid\nestimates inference critical statistical model contains \nprocess generated data. Perhaps treatment randomized \ndepended small number baseline covariates; knowledge \ncan incorporated model. Alternatively, maybe data \nobservational, knowledge data-generating process (DGP).\ncase, statistical model contain data\ndistributions. practice; however, models selected based knowledge\nDGP, instead models often selected based (1) p-values \nyield, (2) convenience implementation, /(3) analysts loyalty\nparticular model. practice “cargo-cult statistics — \nritualistic miming statistics rather conscientious practice,”\n(???) characterized arbitrary modeling choices, even though\nchoices often result different answers research question.\n, “increasingly often, [statistics] used instead aid \nabet weak science, role can perform well used mechanically \nritually,” opposed original purpose safeguarding weak\nscience (???). presents fundamental drive behind epidemic\nfalse findings scientific research suffering (???).“suggest weak statistical understanding probably due \ninadequate”statistics lite\" education. approach build \nappropriate mathematical fundamentals provide scientifically\nrigorous introduction statistics. Hence, students’ knowledge may remain\nimprecise, patchy, prone serious misunderstandings. approach\nachieves, however, providing students false confidence able\nuse inferential tools whereas usually interpret p-value\nprovided black box statistical software. educational problem\nremains unaddressed, poor statistical practices prevail regardless \nprocedures measures may favored /banned editorials.\"— (???)team University California, Berkeley, uniquely positioned \nprovide education. Spearheaded Professor Mark van der Laan, \nspreading rapidly many students colleagues greatly\nenriched field, aptly named “Targeted Learning” methodology targets \nscientific question hand counter current culture \n“convenience statistics” opens door biased estimation, misleading\nresults, false discoveries. Targeted Learning restores fundamentals \nformalized field statistics, facts statistical\nmodel represents real knowledge experiment generated data,\ntarget parameter represents seeking learn data \nfeature distribution generated (???). way,\nTargeted Learning defines truth establishes principled standard \nestimation, thereby inhibiting --human biases (e.g., hindsight bias,\nconfirmation bias, outcome bias) infiltrating analysis.“key effective classical [statistical] inference \nwell-defined questions analysis plan tests questions.”— (???)objective provide training students, researchers, industry professionals, faculty science, public health, statistics, \nfields empower necessary knowledge skills utilize \nsound methodology Targeted Learning — technique provides tailored\npre-specified machines answering queries, data analysis \ncompletely reproducible, estimators efficient, minimally biased, \nprovide formal statistical inference.Just conscientious use modern statistical methodology necessary \nensure scientific practice thrives, remains critical acknowledge \nrole robust software plays allowing practitioners direct access \npublished results. recall “article…scientific publication \nscholarship , merely advertising scholarship. \nactual scholarship complete software development environment \ncomplete set instructions generated figures,” thus making \navailability adoption robust statistical software key enhancing \ntransparency inherent aspect science (???).statistical methodology readily accessible practice, \ncrucial accompanied robust user-friendly software\n(???; ???). tlverse software\necosystem developed fulfill need Targeted Learning\nmethodology. software facilitate computationally reproducible\nefficient analyses, also tool Targeted Learning education since\nworkflow mirrors methodology. particular, tlverse\nparadigm focus implementing specific estimator small set \nrelated estimators. Instead, focus exposing statistical framework\nTargeted Learning — R packages tlverse ecosystem\ndirectly model key objects defined mathematical theoretical\nframework Targeted Learning. ’s , tlverse R packages share \ncore set design principles centered extensibility, allowing \nused conjunction built upon one cohesive\nfashion.workshop, reader embark journey tlverse\necosystem. Guided R programming exercises, case studies, \nintuitive explanation readers build toolbox applying Targeted\nLearning statistical methodology, translate real-world causal\ninference analyses. Participants need fully trained statistician \nbegin understanding applying methods. However, highly\nrecommended participants understanding basic statistical\nconcepts confounding, probability distributions, confidence intervals,\nhypothesis tests, regression. Advanced knowledge mathematical statistics\nmay useful necessary. Familiarity R programming\nlanguage essential. also recommend understanding introductory\ncausal inference.introductory materials learning R programming language recommend following free resources:Software Carpentry’s Programming \nRSoftware Carpentry’s R Reproducible Scientific\nAnalysisGrolemund Wickham’s R Data\nScienceFor causal inference learning materials recommend following resources:Hernán MA, Robins JM (2019). Causal\nInference.Jason . Roy’s coursera Course Crash Course Causality: Inferring\nCausal Effects Observational Data","code":""},{"path":"tlverse.html","id":"tlverse","chapter":"1 Welcome to the tlverse","heading":"1 Welcome to the tlverse","text":"","code":""},{"path":"tlverse.html","id":"learning-objectives","chapter":"1 Welcome to the tlverse","heading":"1.1 Learning Objectives","text":"Understand tlverse ecosystem conceptuallyIdentify core components tlverseInstall tlverse R packagesUnderstand Targeted Learning roadmapLearn WASH Benefits example data","code":""},{"path":"tlverse.html","id":"what-is-the-tlverse","chapter":"1 Welcome to the tlverse","heading":"1.2 What is the tlverse?","text":"tlverse new framework Targeted Learning R, inspired \ntidyverse ecosystem R packages.analogy tidyverse:tidyverse opinionated collection R packages designed data\nscience. packages share underlying design philosophy, grammar, data\nstructures., tlverse isan opinionated collection R packages Targeted Learningsharing underlying philosophy, grammar, set data structures","code":""},{"path":"tlverse.html","id":"tlverse-components","chapter":"1 Welcome to the tlverse","heading":"1.3 tlverse components","text":"main packages represent core tlverse:sl3: Modern Super Learning Pipelines\n? modern object-oriented re-implementation Super Learner\nalgorithm, employing recently developed paradigms R programming.\n? design leverages modern tools fast computation, \nforward-looking, can form one cornerstones tlverse.\n? modern object-oriented re-implementation Super Learner\nalgorithm, employing recently developed paradigms R programming.? design leverages modern tools fast computation, \nforward-looking, can form one cornerstones tlverse.tmle3: Engine Targeted Learning\n? generalized framework simplifies Targeted Learning \nidentifying implementing series common statistical estimation\nprocedures.\n? common interface engine accommodates current algorithmic\napproaches Targeted Learning still flexible enough remain \nengine even new techniques developed.\n? generalized framework simplifies Targeted Learning \nidentifying implementing series common statistical estimation\nprocedures.? common interface engine accommodates current algorithmic\napproaches Targeted Learning still flexible enough remain \nengine even new techniques developed.addition engines drive development tlverse, \nsupporting packages – particular, two…origami: Generalized Framework \nCross-Validation\n? generalized framework flexible cross-validation\n? Cross-validation key part ensuring error estimates honest\npreventing overfitting. essential part Super\nLearner algorithm Targeted Learning.\n? generalized framework flexible cross-validationWhy? Cross-validation key part ensuring error estimates honest\npreventing overfitting. essential part Super\nLearner algorithm Targeted Learning.delayed: Parallelization Framework \nDependent Tasks\n? framework delayed computations (futures) based task\ndependencies.\n? Efficient allocation compute resources essential deploying\nlarge-scale, computationally intensive algorithms.\n? framework delayed computations (futures) based task\ndependencies.? Efficient allocation compute resources essential deploying\nlarge-scale, computationally intensive algorithms.key principle tlverse extensibility. , want support\nnew Targeted Learning estimators developed. model \nnew estimators implemented additional packages using core packages\n. currently two featured examples :tmle3mopttx: Optimal Treatments\ntlverse\n? Learn optimal rule estimate mean outcome rule\n? Optimal Treatment powerful tool precision healthcare \nsettings one-size-fits-treatment approach \nappropriate.\n? Learn optimal rule estimate mean outcome ruleWhy? Optimal Treatment powerful tool precision healthcare \nsettings one-size-fits-treatment approach \nappropriate.tmle3shift: Shift Interventions \ntlverse\n? Shift interventions continuous treatments\n? treatment variables discrete. able estimate \neffects continuous treatment represents powerful extension \nTargeted Learning approach.\n? Shift interventions continuous treatmentsWhy? treatment variables discrete. able estimate \neffects continuous treatment represents powerful extension \nTargeted Learning approach.","code":""},{"path":"tlverse.html","id":"installtlverse","chapter":"1 Welcome to the tlverse","heading":"1.4 Installation","text":"tlverse ecosystem packages currently hosted \nhttps://github.com/tlverse, yet CRAN. \ncan use devtools package install :tlverse depends large number packages also hosted\nGitHub. , may see following error:just means R tried install many packages GitHub \nshort window. fix , need tell R use GitHub \nuser (’ll need GitHub user account). Follow two steps:Type usethis::browse_github_pat() R console, direct\nGitHub’s page create New Personal Access Token.Create Personal Access Token simply clicking “Generate token” \nbottom page.Copy Personal Access Token, long string lowercase letters \nnumbers.Type usethis::edit_r_environ() R console, open \n.Renviron file source window RStudio. able \naccess .Renviron file command, try inputting\nSys.setenv(GITHUB_PAT = ) Personal Access Token inserted \nstring equals symbol; error, skip \nstep 8..Renviron file, type GITHUB_PAT= paste Personal\nAccess Token equals symbol space..Renviron file, press enter key ensure .Renviron\nends newline.Save .Renviron file.Restart R changes take effect. can restart R via drop-\nmenu “Session” tab. “Session” tab top RStudio\ninterface.following steps, able successfully install \npackage threw error .","code":"\ninstall.packages(\"devtools\")\ndevtools::install_github(\"tlverse/tlverse\")Error: HTTP error 403.\n  API rate limit exceeded for 71.204.135.82. (But here's the good news:\n  Authenticated requests get a higher rate limit. Check out the documentation\n  for more details.)\n\n  Rate limit remaining: 0/60\n  Rate limit reset at: 2019-03-04 19:39:05 UTC\n\n  To increase your GitHub API rate limit\n  - Use `usethis::browse_github_pat()` to create a Personal Access Token.\n  - Use `usethis::edit_r_environ()` and add the token as `GITHUB_PAT`."},{"path":"intro.html","id":"intro","chapter":"2 The Roadmap for Targeted Learning","heading":"2 The Roadmap for Targeted Learning","text":"","code":""},{"path":"intro.html","id":"learning-objectives-1","chapter":"2 The Roadmap for Targeted Learning","heading":"2.1 Learning Objectives","text":"end chapter able :Translate scientific questions statistical questions.Define statistical model based knowledge experiment \ngenerated data.Identify causal parameter function observed data distribution.Explain following causal statistical assumptions \nimplications: ..d., consistency, interference, positivity, SUTVA.","code":""},{"path":"intro.html","id":"introduction","chapter":"2 The Roadmap for Targeted Learning","heading":"2.2 Introduction","text":"roadmap statistical learning concerned translation \nreal-world data applications mathematical statistical formulation \nrelevant estimation problem. involves data random variable \nprobability distribution, scientific knowledge represented statistical\nmodel, statistical target parameter representing answer question \ninterest, notion estimator sampling distribution \nestimator.","code":""},{"path":"intro.html","id":"the-roadmap","chapter":"2 The Roadmap for Targeted Learning","heading":"2.3 The Roadmap","text":"Following roadmap process five stages.Data random variable probability distribution, \\(O \\sim P_0\\).statistical model \\(\\mathcal{M}\\) \\(P_0 \\\\mathcal{M}\\).statistical target parameter \\(\\Psi\\) estimand \\(\\Psi(P_0)\\).estimator \\(\\hat{\\Psi}\\) estimate \\(\\hat{\\Psi}(P_n)\\).measure uncertainty estimate \\(\\hat{\\Psi}(P_n)\\).","code":""},{"path":"intro.html","id":"data-as-a-random-variable-with-a-probability-distribution-o-sim-p_0","chapter":"2 The Roadmap for Targeted Learning","heading":"(1) Data as a random variable with a probability distribution, \\(O \\sim P_0\\)","text":"data set ’re confronted result experiment can\nview data random variable, \\(O\\), repeat experiment\ndifferent realization experiment. particular, \nrepeat experiment many times learn probability distribution,\n\\(P_0\\), data. , observed data \\(O\\) probability distribution\n\\(P_0\\) \\(n\\) independent identically distributed (..d.) observations \nrandom variable \\(O; O_1, \\ldots, O_n\\). Note data ..d.,\nways handle non-..d. data, establishing conditional\nindependence, stratifying data create sets identically distributed data,\netc. crucial researchers absolutely clear actually\nknow data-generating distribution given problem interest.\nUnfortunately, communication statisticians researchers often\nfraught misinterpretation. roadmap provides mechanism \nensure clear communication research statistician – truly helps\ncommunication!","code":""},{"path":"intro.html","id":"the-empirical-probability-measure-p_n","chapter":"2 The Roadmap for Targeted Learning","heading":"The empirical probability measure, \\(P_n\\)","text":"\\(n\\) ..d. observations empirical probability\nmeasure, \\(P_n\\). empirical probability measure approximation \ntrue probability measure \\(P_0\\), allowing us learn data. \nexample, can define empirical probability measure set, \\(\\), \nproportion observations end \\(\\). ,\n\\[\\begin{equation*}\n  P_n() = \\frac{1}{n}\\sum_{=1}^{n} \\mathbb{}(O_i \\)\n\\end{equation*}\\]order start learning something, need ask “know \nprobability distribution data?” brings us Step 2.","code":""},{"path":"intro.html","id":"the-statistical-model-mathcalm-such-that-p_0-in-mathcalm","chapter":"2 The Roadmap for Targeted Learning","heading":"(2) The statistical model \\(\\mathcal{M}\\) such that \\(P_0 \\in \\mathcal{M}\\)","text":"statistical model \\(\\mathcal{M}\\) defined question asked \nend . defined set possible probability\ndistributions observed data. Often \\(\\mathcal{M}\\) large (possibly\ninfinite-dimensional), reflect fact statistical knowledge \nlimited. case \\(\\mathcal{M}\\) infinite-dimensional, deem \nnonparametric statistical model.Alternatively, probability distribution data hand described\nfinite number parameters, statistical model parametric. \ncase, prescribe belief random variable \\(O\\) \nobserved , e.g., normal distribution mean \\(\\mu\\) variance\n\\(\\sigma^2\\). formally, parametric model may defined\n\\[\\begin{equation*}\n  \\mathcal{M} = \\{P_{\\theta} : \\theta \\\\mathcal{R}^d \\}\n\\end{equation*}\\]Sadly, assumption data-generating distribution specific,\nparametric forms --common, even leap faith. \npractice oversimplification current culture data analysis typically\nderails attempt trying answer scientific question hand; alas,\nstatements ever-popular quip Box “models wrong \nuseful,” encourage data analyst make arbitrary choices even \noften force significant differences answers estimation\nproblem. Targeted Learning paradigm suffer bias since \ndefines statistical model representation true\ndata-generating distribution corresponding observed data.Now, Step 3: ``trying learn data?\"","code":""},{"path":"intro.html","id":"the-statistical-target-parameter-psi-and-estimand-psip_0","chapter":"2 The Roadmap for Targeted Learning","heading":"(3) The statistical target parameter \\(\\Psi\\) and estimand \\(\\Psi(P_0)\\)","text":"statistical target parameter, \\(\\Psi\\), defined mapping \nstatistical model, \\(\\mathcal{M}\\), parameter space (.e., real number)\n\\(\\mathcal{R}\\). , \\(\\Psi: \\mathcal{M}\\rightarrow\\mathbb{R}\\). target\nparameter may seen representation \nquantity wish learn data, answer well-specified\n(often causal) question interest. contrast purely statistical target\nparameters, causal target parameters require identification observed\ndata, based causal models include several untestable assumptions,\ndescribed detail section causal target parameters.simple example, consider data set contains observations \nsurvival time every subject, question interest “’s\nprobability someone lives longer five years?” ,\n\\[\\begin{equation*}\n  \\Psi(P_0) = \\mathbb{P}(O > 5)\n\\end{equation*}\\]answer question estimand, \\(\\Psi(P_0)\\), \nquantity ’re trying learn data. defined \\(O\\),\n\\(\\mathcal{M}\\) \\(\\Psi(P_0)\\) formally defined statistical\nestimation problem.","code":""},{"path":"intro.html","id":"the-estimator-hatpsi-and-estimate-hatpsip_n","chapter":"2 The Roadmap for Targeted Learning","heading":"(4) The estimator \\(\\hat{\\Psi}\\) and estimate \\(\\hat{\\Psi}(P_n)\\)","text":"obtain good approximation estimand, need estimator, \npriori-specified algorithm defined mapping set possible\nempirical distributions, \\(P_n\\), live non-parametric statistical\nmodel, \\(\\mathcal{M}_{NP}\\) (\\(P_n \\\\mathcal{M}_{NP}\\)), parameter space\nparameter interest. , \\(\\hat{\\Psi} : \\mathcal{M}_{NP} \\rightarrow \\mathbb{R}^d\\). estimator function takes input\nobserved data, realization \\(P_n\\), gives output value \nparameter space, estimate, \\(\\hat{\\Psi}(P_n)\\).estimator may seen operator maps observed data \ncorresponding empirical distribution value parameter space, \nnumerical output produced function estimate. Thus, \nelement parameter space based empirical probability distribution\nobserved data. plug realization \\(P_n\\) (based sample\nsize \\(n\\) random variable \\(O\\)), get back estimate \\(\\hat{\\Psi}(P_n)\\)\ntrue parameter value \\(\\Psi(P_0)\\).order quantify uncertainty estimate target parameter\n(.e., construct statistical inference), understanding sampling\ndistribution estimator necessary. brings us Step 5.","code":""},{"path":"intro.html","id":"a-measure-of-uncertainty-for-the-estimate-hatpsip_n","chapter":"2 The Roadmap for Targeted Learning","heading":"(5) A measure of uncertainty for the estimate \\(\\hat{\\Psi}(P_n)\\)","text":"Since estimator \\(\\hat{\\Psi}\\) function empirical\ndistribution \\(P_n\\), estimator random variable sampling\ndistribution. , repeat experiment drawing \\(n\\) observations \nevery time end different realization estimate \nestimator sampling distribution. sampling distribution estimator\ncan theoretically validated approximately normally distributed \nCentral Limit Theorem (CLT).class Central Limit Theorems (CLTs) statements regarding \nconvergence sampling distribution estimator normal\ndistribution. general, construct estimators whose limit sampling\ndistributions may shown approximately normal distributed sample size\nincreases. large enough \\(n\\) ,\n\\[\\begin{equation*}\n  \\hat{\\Psi}(P_n) \\sim N \\left(\\Psi(P_0), \\frac{\\sigma^2}{n}\\right),\n\\end{equation*}\\]\npermitting statistical inference. Now, can proceed quantify \nuncertainty chosen estimator construction hypothesis tests \nconfidence intervals. example, may construct confidence interval \nlevel \\((1 - \\alpha)\\) estimand, \\(\\Psi(P_0)\\):\n\\[\\begin{equation*}\n  \\hat{\\Psi}(P_n) \\pm z_{1 - \\frac{\\alpha}{2}}\n    \\left(\\frac{\\sigma}{\\sqrt{n}}\\right),\n\\end{equation*}\\]\n\\(z_{1 - \\frac{\\alpha}{2}}\\) \\((1 - \\frac{\\alpha}{2})^\\text{th}\\)\nquantile standard normal distribution. Often, interested \nconstructing 95% confidence intervals, corresponding mass \\(\\alpha = 0.05\\) \neither tail limit distribution; thus, typically take\n\\(z_{1 - \\frac{\\alpha}{2}} \\approx 1.96\\).Note: typically estimate standard error,\n\\(\\frac{\\sigma}{\\sqrt{n}}\\).95% confidence interval means take 100 different samples\nsize \\(n\\) compute 95% confidence interval sample \napproximately 95 100 confidence intervals contain estimand,\n\\(\\Psi(P_0)\\). practically, means 95% probability\n(95% confidence) confidence interval procedure contain \ntrue estimand. However, single estimated confidence interval either \ncontain true estimand .","code":""},{"path":"intro.html","id":"summary-of-the-roadmap","chapter":"2 The Roadmap for Targeted Learning","heading":"2.4 Summary of the Roadmap","text":"Data, \\(O\\), viewed random variable probability distribution.\noften \\(n\\) units independent identically distributed units \nprobability distribution \\(P_0\\) (\\(O_1, \\ldots, O_n \\sim P_0\\)). \nstatistical knowledge experiment generated data. \nwords, make statement true data distribution \\(P_0\\) falls \ncertain set called statistical model, \\(\\mathcal{M}\\). Often sets \nlarge statistical knowledge limited statistical models\noften infinite dimensional models. statistical query , “\ntrying learn data?” denoted statistical target parameter,\n\\(\\Psi\\), maps \\(P_0\\) estimand, \\(\\Psi(P_0)\\). point \nstatistical estimation problem formally defined now need\nstatistical theory guide us construction estimators. ’s lot\nstatistical theory review course , particular, relies\nCentral Limit Theorem, allowing us come estimators \napproximately normally distributed also allowing us come statistical\ninference (.e., confidence intervals hypothesis tests).","code":""},{"path":"intro.html","id":"causal","chapter":"2 The Roadmap for Targeted Learning","heading":"2.5 Causal Target Parameters","text":"","code":""},{"path":"intro.html","id":"the-causal-model","chapter":"2 The Roadmap for Targeted Learning","heading":"2.5.1 The Causal Model","text":"formalizing data statistical model, can define causal\nmodel express causal parameters interest. Directed acyclic graphs (DAGs)\none useful tool express know causal relations among\nvariables. Ignoring exogenous \\(U\\) terms (explained ), assume \nfollowing ordering variables observed data \\(O\\).directed acyclic graphs (DAGs) like provide convenient means \nvisualize causal relations variables, causal\nrelations among variables can represented via set structural equations,\ndefine non-parametric structural equation model (NPSEM):\n\\[\\begin{align*}\n  W &= f_W(U_W) \\\\\n  &= f_A(W, U_A) \\\\\n  Y &= f_Y(W, , U_Y),\n\\end{align*}\\]\n\\(U_W\\), \\(U_A\\), \\(U_Y\\) represent unmeasured exogenous background\ncharacteristics influence value variable. NPSEM, \\(f_W\\),\n\\(f_A\\) \\(f_Y\\) denote variable (\\(W\\), \\(\\) \\(Y\\), respectively)\nfunction parents unmeasured background characteristics, note\nimposition particular functional constraints(e.g.,\nlinear, logit-linear, one interaction, etc.). reason, \ncalled non-parametric structural equation models (NPSEMs). \nDAG set nonparametric structural equations represent exactly \ninformation may used interchangeably.first hypothetical experiment consider assigning exposure \nwhole population observing outcome, assigning exposure \nwhole population observing outcome. nonparametric structural\nequations, corresponds comparison outcome distribution \npopulation two interventions:\\(\\) set \\(1\\) individuals, \\(\\) set \\(0\\) individuals.interventions imply two new nonparametric structural equation models. \ncase \\(= 1\\), \n\\[\\begin{align*}\n  W &= f_W(U_W) \\\\\n  &= 1 \\\\\n  Y(1) &= f_Y(W, 1, U_Y),\n\\end{align*}\\]\ncase \\(=0\\),\n\\[\\begin{align*}\n  W &= f_W(U_W) \\\\\n  &= 0 \\\\\n  Y(0) &= f_Y(W, 0, U_Y).\n\\end{align*}\\]equations, \\(\\) longer function \\(W\\) \nintervened system, setting \\(\\) deterministically either values\n\\(1\\) \\(0\\). new symbols \\(Y(1)\\) \\(Y(0)\\) indicate outcome variable \npopulation generated respective NPSEMs ; \noften called counterfactuals (since run contrary--fact). difference\nmeans outcome two interventions defines \nparameter often called “average treatment effect” (ATE), denoted\n\\[\\begin{equation}\\label{eqn:ate}\n  ATE = \\mathbb{E}_X(Y(1)-Y(0)),\n\\end{equation}\\]\n\\(\\mathbb{E}_X\\) mean theoretical (unobserved) full data\n\\(X = (W, Y(1), Y(0))\\).Note, can define much complicated interventions NPSEM’s, \ninterventions based upon rules (based upon covariates), stochastic\nrules, etc. results different targeted parameter entails\ndifferent identifiability assumptions discussed .","code":""},{"path":"intro.html","id":"identifiability","chapter":"2 The Roadmap for Targeted Learning","heading":"2.5.2 Identifiability","text":"can never observe \\(Y(0)\\) (counterfactual outcome \\(=0\\))\n\\(Y(1)\\) (similarly, counterfactual outcome \\(=1\\)), \nestimate  directly. Instead, make assumptions \nquantity may estimated observed data \\(O \\sim P_0\\) \ndata-generating distribution \\(P_0\\). Fortunately, given causal model\nspecified NPSEM , can, handful untestable assumptions,\nestimate ATE, even observational data. assumptions may \nsummarized followsThe causal graph implies \\(Y() \\perp \\) \\(\\\\mathcal{}\\), \nrandomization assumption. case observational data, \nanalogous assumption strong ignorability unmeasured confounding\n\\(Y() \\perp \\mid W\\) \\(\\\\mathcal{}\\);Although represented causal graph, also required assumption\ninterference units, , outcome unit \\(\\) \\(Y_i\\) \naffected exposure unit \\(j\\) \\(A_j\\) unless \\(=j\\);Consistency treatment mechanism also required, .e., outcome\nunit \\(\\) \\(Y_i()\\) whenever \\(A_i = \\), assumption also known “\nversions treatment”;also necessary observed units, across strata defined \\(W\\),\nbounded (non-deterministic) probability receiving treatment –\n, \\(0 < \\mathbb{P}(= \\mid W) < 1\\) \\(\\) \\(W\\)). assumption\nreferred positivity overlap.Remark: Together, (2) (3), assumptions interference \nconsistency, respectively, jointly referred stable unit\ntreatment value assumption (SUTVA).Given assumptions, ATE may re-written function \\(P_0\\),\nspecifically\n\\[\\begin{equation}\\label{eqn:estimand}\n  ATE = \\mathbb{E}_0(Y(1) - Y(0)) = \\mathbb{E}_0\n    \\left(\\mathbb{E}_0[Y \\mid = 1, W] - \\mathbb{E}_0[Y \\mid = 0, W]\\right),\n\\end{equation}\\]\ndifference predicted outcome values subject, \ncontrast treatment conditions (\\(= 0\\) vs. \\(= 1\\)), population,\naveraged observations. Thus, parameter theoretical “full” data\ndistribution can represented estimand observed data\ndistribution. Significantly, nothing representation \n requires parameteric assumptions; thus, regressions\nright hand side may estimated freely machine learning. \ndifferent parameters, potentially different identifiability\nassumptions resulting estimands can functions different components\n\\(P_0\\).","code":""},{"path":"intro.html","id":"the-wash-benefits-example-dataset","chapter":"2 The Roadmap for Targeted Learning","heading":"2.6 The WASH Benefits Example Dataset","text":"data come study effect water quality, sanitation, hand\nwashing, nutritional interventions child development rural Bangladesh\n(WASH Benefits Bangladesh): cluster-randomised controlled trial\n(???). study enrolled pregnant women first second\ntrimester rural villages Gazipur, Kishoreganj, Mymensingh, \nTangail districts central Bangladesh, average eight women per\ncluster. Groups eight geographically adjacent clusters block-randomised,\nusing random number generator, six intervention groups (\nreceived weekly visits community health promoter first 6 months\nevery 2 weeks next 18 months) double-sized control group (\nintervention health promoter visit). six intervention groups :chlorinated drinking water;improved sanitation;hand-washing soap;combined water, sanitation, hand washing;improved nutrition counseling provision lipid-based nutrient\nsupplements; andcombined water, sanitation, handwashing, nutrition.workshop, concentrate child growth (size age) outcome \ninterest. reference, trial registered ClinicalTrials.gov \nNCT01590095.purposes workshop, start treating data independent\nidentically distributed (..d.) random draws large target\npopulation. , available options, account clustering \ndata (within sampled geographic units), , simplification, avoid \ndetails workshop presentations, although modifications \nmethodology biased samples, repeated measures, etc., available.28 variables measured, 1 variable set outcome \ninterest. outcome, \\(Y\\), weight--height Z-score (whz dat);\ntreatment interest, \\(\\), randomized treatment group (tr \ndat); adjustment set, \\(W\\), consists simply everything else. \nresults observed data structure \\(n\\) ..d. copies \\(O_i = (W_i, A_i, Y_i)\\), \\(= 1, \\ldots, n\\).Using skimr package, can\nquickly summarize variables measured WASH Benefits data set:(#tab:skim_washb_data)Data summaryVariable type: characterVariable type: numericA convenient summary relevant variables given just , complete\nsmall visualization describing marginal characteristics \ncovariate. Note asset variables reflect socio-economic status \nstudy participants. Notice also uniform distribution treatment groups\n(twice many controls); , course, design.","code":"\nlibrary(tidyverse)\n\n# read in data\ndat <- read_csv(\"https://raw.githubusercontent.com/tlverse/tlverse-data/master/wash-benefits/washb_data.csv\")\ndat\n#> # A tibble: 4,695 x 28\n#>     whz tr     fracode month  aged sex    momage momedu momheight hfiacat  Nlt18\n#>   <dbl> <chr>  <chr>   <dbl> <dbl> <chr>   <dbl> <chr>      <dbl> <chr>    <dbl>\n#> 1  0    Contr… N05265      9   268 male       30 Prima…      146. Food Se…     3\n#> 2 -1.16 Contr… N05265      9   286 male       25 Prima…      149. Moderat…     2\n#> 3 -1.05 Contr… N08002      9   264 male       25 Prima…      152. Food Se…     1\n#> 4 -1.26 Contr… N08002      9   252 female     28 Prima…      140. Food Se…     3\n#> 5 -0.59 Contr… N06531      9   336 female     19 Secon…      151. Food Se…     2\n#> # … with 4,690 more rows, and 17 more variables: Ncomp <dbl>, watmin <dbl>,\n#> #   elec <dbl>, floor <dbl>, walls <dbl>, roof <dbl>, asset_wardrobe <dbl>,\n#> #   asset_table <dbl>, asset_chair <dbl>, asset_khat <dbl>, asset_chouki <dbl>,\n#> #   asset_tv <dbl>, asset_refrig <dbl>, asset_bike <dbl>, asset_moto <dbl>,\n#> #   asset_sewmach <dbl>, asset_mobile <dbl>\nlibrary(skimr)\nskim(dat)"},{"path":"intro.html","id":"exercises","chapter":"2 The Roadmap for Targeted Learning","heading":"2.7 Exercises","text":"Introduction\nenroll course?\neducational /work experiences related topics\ncovered course, including causal inference, data analysis,\nstatistics, machine learning?\nIntroductionWhy enroll course?educational /work experiences related topics\ncovered course, including causal inference, data analysis,\nstatistics, machine learning?objective roadmap?objective roadmap?Specifying statistical estimation problem consists three steps?Specifying statistical estimation problem consists three steps?Provide definition example following:\nStatistical model\nTarget estimand\nEstimator\nProvide definition example following:Statistical modelTarget estimandEstimatorProvide examples data following scenarios:\nobservations independent, identically distributed.\nobservations neither independent identically distributed.\nProvide examples data following scenarios:observations independent, identically distributed.observations neither independent identically distributed.Traditional data analysis concerns\nCommon data science practice encourages users “check” models \nfit data one checks fail, \nnew model can fit data. can approach problematic?\nCommon data science practice lets type data hand dictate \nscientific question interest statistical model. \nproblematic?\nTraditional data analysis concernsCommon data science practice encourages users “check” models \nfit data one checks fail, \nnew model can fit data. can approach problematic?Common data science practice lets type data hand dictate \nscientific question interest statistical model. \nproblematic?","code":""},{"path":"origami.html","id":"origami","chapter":"3 Cross-validation","heading":"3 Cross-validation","text":"Ivana MalenicaBased origami R package\nJeremy Coyle, Nima Hejazi, Ivana Malenica Rachael Phillips.Updated: 2021-07-20","code":""},{"path":"origami.html","id":"learning-objectives-2","chapter":"3 Cross-validation","heading":"Learning Objectives","text":"end chapter able :Differentiate training, validation test sets.Differentiate training, validation test sets.Understand concept loss function, risk cross-validation.Understand concept loss function, risk cross-validation.Select loss function appropriate functional parameter \nestimated.Select loss function appropriate functional parameter \nestimated.Understand contrast different cross-validation schemes ..d. data.Understand contrast different cross-validation schemes ..d. data.Understand contrast different cross-validation schemes time dependent\ndata.Understand contrast different cross-validation schemes time dependent\ndata.Setup proper fold structure, build custom fold-based function, \ncross-validate proposed function using origami R package.Setup proper fold structure, build custom fold-based function, \ncross-validate proposed function using origami R package.Setup proper cross-validation structure use Super Learner\nusing origami R package.Setup proper cross-validation structure use Super Learner\nusing origami R package.","code":""},{"path":"origami.html","id":"introduction-1","chapter":"3 Cross-validation","heading":"3.1 Introduction","text":"chapter, start elaborating estimation step outlined \nintroductory chapter, discussed Roadmap Targeted\nLearning. order generate initial estimate target\nparameter – focus following chapter Super\nLearning, first need translate, incorporate, knowledge\ndata generating process estimation procedure, decide \nevaluate estimation performance.performance, error, algorithm used estimation procedure\ndirectly relates generalizability independent data. proper\nassessment performance proposed algorithms extremely important; \nguides choice final learning method, gives us quantitative\nassessment good chosen algorithm . order assess \nperformance algorithm, introduce concept loss function,\nhelps us define risk, also referred expected\nprediction error.goal, specified next chapter, \nestimate true risk proposed statistical learning method. \ngoal(s) consist :Estimating performance different algorithms order choose \nbest one.chosen winner, estimate true risk proposed\nstatistical learning method.following, propose method using observed data \ncross-validation procedure using origami package (???).","code":""},{"path":"origami.html","id":"background","chapter":"3 Cross-validation","heading":"3.2 Background","text":"Ideally, data-rich scenario, split dataset three parts:training set,validation set,test set.training set used fit algorithm(s) interest; evaluate \nperformance fit(s) validation set, can used estimate\nprediction error (e.g., tuning model selection). final error \nchosen algorithm(s) obtained using test set, kept separately,\ndoesn’t see data final evaluation. One might wonder, \ntraining data readily available, use training error evaluate \nproposed algorithm’s performance? Unfortunately, training error \ngood estimate true risk; consistently decreases model complexity,\nresulting possible overfit training data low generalizability.Since data often scarce, separating training, validation test\nset usually possible. absence large data set designated\ntest set, must resort methods estimate true risk efficient\nsample re-use. Re-sampling methods, great generality, involve repeatedly\nsampling training set fitting proposed algorithms new\nsamples. often computationally intensive, re-sampling methods \nparticularly useful model selection estimation true risk. \naddition, might provide insight variability robustness \nalgorithm fit fitting algorithm training data.","code":""},{"path":"origami.html","id":"introducing-cross-validation","chapter":"3 Cross-validation","heading":"3.2.1 Introducing: cross-validation","text":"chapter, focus cross-validation – essential tool \nevaluating given algorithm extends sample target\npopulation sample derived. seen widespread application\nfacets statistics, perhaps notably statistical machine learning.\ncross-validation procedure can used model selection, well \nestimation true risk associated statistical learning method \norder evaluate performance. particular, cross-validation directly\nestimates true risk estimate applied independent sample\njoint distribution predictors outcome. used model\nselection, cross-validation powerful optimality properties. asymptotic\noptimality results state cross-validated selector performs (terms \nrisk) asymptotically well optimal oracle selector based true,\nunknown data generating distribution. details theoretical\nresults, suggest (???), (???), (???) \n(???).great generality, cross-validation works partitioning sample \ncomplementary subsets, applying particular algorithm(s) subset (\ntraining set), evaluating method choice complementary subset\n(validation/test set). procedure repeated across multiple partitions\ndata. variety different partitioning schemes exist, depending \nproblem interest, data size, prevalence outcome, dependence\nstructure. origami package provides suite tools generalize \napplication cross-validation arbitrary data analytic procedures. \nfollowing, describe different types cross-validation schemes readily\navailable origami, introduce general structure origami\npackage, show use applied settings.","code":""},{"path":"origami.html","id":"estimation-roadmap-how-does-it-all-fit-together","chapter":"3 Cross-validation","heading":"3.3 Estimation Roadmap: how does it all fit together?","text":"Similarly defined Roadmap Targeted Learning, \ncan define Estimation Roadmap guide estimation process. \nparticular, developed unified loss-based cross-validation methodology\nestimator construction, selection, performance assessment series \narticles (e.g., see (???), (???), (???),\n(???), (???)) follow three main steps:loss funtion:\nDefine target parameter minimizer expected loss (risk) \nfull data loss function chosen represent desired performance measure.\nMap full data loss function observed data loss function, \nexpected value leading efficient estimator risk.loss funtion:\nDefine target parameter minimizer expected loss (risk) \nfull data loss function chosen represent desired performance measure.\nMap full data loss function observed data loss function, \nexpected value leading efficient estimator risk.algorithms:\nConstruct finite collection candidate estimators parameter \ninterest.algorithms:\nConstruct finite collection candidate estimators parameter \ninterest.cross-validation scheme:\nApply appropriate cross-validation select optimal estimator among \ncandidates, assess overall performance resulting estimator.cross-validation scheme:\nApply appropriate cross-validation select optimal estimator among \ncandidates, assess overall performance resulting estimator.Step 1 Estimation Roadmap allows us unify broad range problems\ntraditionally treated separately statistical literature,\nincluding density estimation, prediction polychotomous continuous\noutcomes. example, interested estimating full joint\nconditional density, use negative log-likelihood loss. instead\ninterested conditional mean continuous outcome, one use\nsquared error loss; outcome binary, one resort \nindicator (0-1) loss. unified loss-based framework also reconciles censored\nfull data estimation methods, generalizing loss based learning \nfull data loss based learning general censored data.","code":""},{"path":"origami.html","id":"example-cross-validation-and-prediction","chapter":"3 Cross-validation","heading":"3.4 Example: cross-validation and prediction","text":"Now introduced Estimation Roadmap, can define objective \nmathematical notation, using prediction example. Let observed\ndata defined \\(X = (W,Y)\\), unit specific data can written \n\\(X_i = (W_i,Y_i)\\), \\(= 1, \\ldots, n\\). \\(n\\) samples, \ndenote \\(Y_i\\) outcome interest (polychotomous continuous), \\(W_i\\)\n\\(p\\)-dimensional set covariates. Let \\(\\psi_0(W)\\) denote target\nparameter interest want estimate; example, interested\nestimating conditional expectation outcome given covariates,\n\\(\\psi_0(W) = E(Y \\mid W)\\). Following Estimation Roadmap, chose \nappropriate loss function, \\(L\\), \\(\\psi_0(W) = \\text{argmin}_{\\psi} E[L(X,\\psi(W))]\\). know \\(\\psi\\) ? order pick\noptimal estimator among candidates, assess overall performance\nresulting estimator, use cross-validation – dividing available data\ntraining set validation set. Observations training set \nused fit (train) estimator, validation set used assess\nrisk (validate) .derive general representation cross-validation, define split\nvector, \\(B_n = (B_n(): = 1, \\ldots, n) \\\\{0,1\\}^n\\). Note split\nvector independent empirical distribution, \\(P_n\\). realization \n\\(B_n\\) defines random split data training validation set \n\\[B_n() = 0, \\ \\ \\text{sample training set}\\]\n\\[B_n() = 1, \\ \\ \\text{sample validation set.}\\]\ncan define \\(P_{n,B_n}^0\\) \\(P_{n,B_n}^1\\) empirical\ndistributions training validation sets, respectively. \\(n_0 = \\sum_i (1-B_n())\\) \\(n_1 = \\sum_i B_n()\\) denote number samples \nset. particular distribution split vector \\(B_n\\) defines type \ncross-validation scheme, tailored problem data set hand.","code":""},{"path":"origami.html","id":"cross-validation-schemes-in-origami","chapter":"3 Cross-validation","heading":"3.5 Cross-validation schemes in origami","text":"specified earlier, particular distribution split vector \\(B_n\\)\ndefines type cross-validation method. following, describe\ndifferent types cross-validation schemes available origami package, \nshow use sequel.","code":""},{"path":"origami.html","id":"wash-benefits-study-example","chapter":"3 Cross-validation","heading":"WASH Benefits Study Example","text":"order illustrate different cross-validation schemes, using \nWASH data. Detailed information WASH Benefits Example Dataset can \nfound Chapter 3. particular, interested predicting\nweight--height z-score whz using available covariate data. \nillustration, start treating data independent identically\ndistributed (..d.) random draws. see cross-validation scheme \n, subset data \\(n=30\\). Note row represents \n..d. sample, indexed row number.look first 30 data.","code":"\nlibrary(data.table)\nlibrary(origami)\nlibrary(knitr)\nlibrary(kableExtra)\n\n# load data set and take a peek\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)"},{"path":"origami.html","id":"cross-validation-for-i.i.d.-data","chapter":"3 Cross-validation","heading":"3.5.1 Cross-validation for i.i.d. data","text":"","code":""},{"path":"origami.html","id":"re-substitution","chapter":"3 Cross-validation","heading":"3.5.1.1 Re-substitution","text":"re-substitution method simplest strategy estimating risk\nassociated fitting proposed algorithm set observations. , \nobserved data used training validation set.illustrate usage re-substitution method origami package\n; use function folds_resubstitution(n). order setup\nfolds_resubstitution(n), just need total number samples want \nallocate training validation sets; remember row data \nunique ..d. sample. Notice structure origami output:v: cross-validation foldtraining_set: indexes samples training setvalidation_set: indexes samples training set.structure origami output (aka, fold(s)) persist \ncross-validation schemes present chapter. , show fold\ngenerated re-substitution method:","code":"\nfolds_resubstitution(nrow(washb_data))\n#> [[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30\n#> \n#> $validation_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"holdout-method","chapter":"3 Cross-validation","heading":"3.5.1.2 Holdout method","text":"holdout method, validation set approach, consists randomly\ndividing available data training set validation set (holdout\nset). model fitted training set, evaluated \nobservations validation set. Typically, data split \n\\(60/40\\), \\(70/30\\), \\(80/20\\) \\(90/10\\) splits.holdout method intuitive, conceptually easy, computationally \ndemanding. However, repeat process randomly splitting data \ntraining validation set, might get different cross-validated\nemprical risk. particular, emprical mean loss validation\nsets might highly variable, depending samples included training/validation split. Overall, cross-validated emprical risk \nholdout method variabiable, since includes variability random\nsplit well - want. classification problems, \npossibility uneven distribution different classes training validation\nset unless data stratified. Finally, note using \ndata train evaluate performance proposed algorithm, might\nresult bias.","code":""},{"path":"origami.html","id":"leave-one-out","chapter":"3 Cross-validation","heading":"3.5.1.3 Leave-one-out","text":"leave-one-cross-validation scheme closely related holdout\nmethod. particular, also involves splitting data training \nvalidation set; however, instead partitioning observed data sets \nsimilar size, single observation used validation set. ,\nmajority units employed training (fitting) proposed\nalgorithm. Since one unit (example \\(x_1 = (w_1, y_1)\\)) used \nfitting process, leave-one-cross-validation results possibly less\nbiased estimate true risk; typically, leave-one-approach \noverestimate risk much holdout method. hand, since\nestimate risk based single sample, typically highly\nvariable estimate.can repeat process spiting data training validation set\nsamples part validation set point. example,\nnext iteration cross-validation might \\(x_2 = (w_2,y_2)\\) \nvalidation set rest \\(n-1\\) samples training set. Repeating\napproach \\(n\\) times results , example, \\(n\\) squared errors \\(MSE_1, MSE_2, \\ldots, MSE_n\\). estimate true risk average \n\\(n\\) squared errors. leave-one-cross-validation results less\nbiased (albeit, variable) estimate risk holdout method, \nexpensive implement \\(n\\) large.illustrate usage leave-one-cross-validation origami\npackage ; use function folds_loo(n). order setup\nfolds_loo(n), similarly re-substitution method, just need total\nnumber samples want cross-validate. show first two folds\ngenerated leave-one-cross-validation .","code":"\nfolds <- folds_loo(nrow(washb_data))\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n#> [26] 27 28 29 30\n#> \n#> $validation_set\n#> [1] 1\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n#> [26] 27 28 29 30\n#> \n#> $validation_set\n#> [1] 2\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"v-fold","chapter":"3 Cross-validation","heading":"3.5.1.4 V-fold","text":"alternative leave-one-V-fold cross-validation. \ncross-validation scheme randomly divides data \\(v\\) sets (folds) equal\nsize; fold, number samples validation set .\nV-fold cross-validation, one folds treated validation set,\nwhereas proposed algorithm fit remaining \\(v-1\\) folds \ntraining set. loss, example MSE, computed samples \nvalidation set. proposed algorithm trained performance\nevaluated first fold, repeat process \\(v\\) times; time, \ndifferent group samples treated validation set. Note V-fold\ncross-validation effectively use data train evaluate \nproposed algorithm without overfitting training data. end, \nV-fold cross-validation results \\(v\\) estimates validation error. final\nV-fold CV estimate computed average validation losses.dataset \\(n\\) samples, V-fold cross-validation \\(v=n\\) just\nleave-one-; similarly, set \\(n=1\\), can get holdout method’s\nestimate algorithm’s performance. Despite obvious computational\nadvantages, V-fold cross-validation often gives accurate estimates \ntrue risk. reason comes bias-variance trade-comes\nemploying methods; leave-one-might less biased, \nhigher variance. difference becomes obvious \\(v<<n\\) (\nsmall, increase bias). V-fold cross-validation, end \naveraging output \\(v\\) fits typically less correlated \noutputs leave-one-fits. Since mean many highly correlated\nquantities higher variance, leave-one-estimate risk \nhigher variance estimate based V-fold cross-validation.Let’s see V-fold cross-validation origami action! next chapter\nstudy Super Learner — actual algorithm fit evaluate\nperformance. Super Learner relies V-fold cross-validation default cross-validation scheme. order\nset V-fold CV, need call function folds_vfold(n, V). Arguments\nfolds_vfold(n, V) require total number samples \ncross-validated, number folds want get.\\(V=2\\), get 2 folds \\(n/2\\) number samples training \nvalidation set.","code":"\nfolds <- folds_vfold(nrow(washb_data), V = 2)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  2  3  4  6  7  8 11 12 14 15 19 22 23 24 28\n#> \n#> $validation_set\n#>  [1]  1  5  9 10 13 16 17 18 20 21 25 26 27 29 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  5  9 10 13 16 17 18 20 21 25 26 27 29 30\n#> \n#> $validation_set\n#>  [1]  2  3  4  6  7  8 11 12 14 15 19 22 23 24 28\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"monte-carlo","chapter":"3 Cross-validation","heading":"3.5.1.5 Monte Carlo","text":"Monte Carlo cross-validation, randomly select fraction data\n(without replacement) form training set; assign rest \nsamples validation set. , data repeatedly randomly\ndivided two sets, training set \\(n_0 = n \\cdot (1-p)\\) observations \nvalidation set \\(n_1 = n \\cdot p\\) observations. process \nrepeated multiple times, generating (random) new training validation\npartitions time.Since partitions independent across folds, sample can appear \nvalidation set multiple times – note stark difference\nMonte Carlo V-fold cross-validation. given \\(p\\), Monte Carlo\ncross-validation optimal done infinite times, \ncomputationally feasible. Monte Carlo\ncross-validation, one able explore many available partitions \nV-fold cross-validation – resulting possibly less variable estimate\nrisk, cost increase bias. many overlapping splits,\noften also need splits (thus computational time) achieve\nV-fold performance \\(V\\) splits.illustrate usage Monte Carlo cross-validation origami\npackage using function folds_montecarlo(n, V, pvalidation). order\nsetup folds_montecarlo(n, V, pvalidation), need:total number samples want cross-validate;number folds;proportion observations placed validation set.\\(V=2\\) \\(pvalidation=0.2\\), obtain 2 folds approximately \\(6\\) samples\nvalidation set per fold.","code":"\nfolds <- folds_montecarlo(nrow(washb_data), V = 2, pvalidation = 0.2)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1] 19 27 16 29 23 12  1  3 18 11  5  7  8  6  9 22 10 25 20 28 15  2 24 26\n#> \n#> $validation_set\n#> [1]  4 13 14 17 21 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1] 19 15 28 25 29 11 20 17 14  4  9 12 30  8 27 18 16 10 13  6 24  3 26  1\n#> \n#> $validation_set\n#> [1]  2  5  7 21 22 23\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"bootstrap","chapter":"3 Cross-validation","heading":"3.5.1.6 Bootstrap","text":"bootstrap cross-validation also consists randomly selecting samples, \nreplacement, training set. rest samples picked \ntraining set allocated validation set. process repeated\nmultiple times, generating (random) new training validation partitions\ntime. contract Monte Carlo cross-validation, total number \nsamples training validation size across folds constant. also\nsample replacement, hence samples can multiple training\nsets. proportion observations validation sets random\nvariable, expectation \\(\\sim 0.368\\).illustrate usage bootstrap cross-validation origami package\nusing function folds_bootstrap(n, V). order setup\nfolds_bootstrap(n, V), need:total number samples want cross-validate;number folds.\\(V=2\\), obtain \\(2\\) folds different number samples validation\nset across folds.","code":"\nfolds <- folds_bootstrap(nrow(washb_data), V = 2)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  2  5 30  1 29 16 10 11  8 25 28  2 11  2 16 28 15 28  1 27  9 19 20 30 18\n#> [26] 11 13  2 18 12\n#> \n#> $validation_set\n#>  [1]  3  4  6  7 14 17 21 22 23 24 26\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1] 12 16 10 29 22 15 27  9 27 16 12 28 10 28 26  1 14  6 23 14 21 16  5 20  8\n#> [26] 23 25  8 27  5\n#> \n#> $validation_set\n#>  [1]  2  3  4  7 11 13 17 18 19 24 30\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"cross-validation-for-dependent-data","chapter":"3 Cross-validation","heading":"3.5.2 Cross-validation for dependent data","text":"origami package also supports numerous cross-validation schemes \ntime-series data, single multiple time-series arbitrary time\nnetwork dependence.","code":""},{"path":"origami.html","id":"airpassenger-example","chapter":"3 Cross-validation","heading":"AirPassenger Example","text":"order illustrate different cross-validation schemes time-series, \nusing AirPassenger data; widely used, freely available\ndataset. AirPassenger dataset R provides monthly totals \ninternational airline passengers 1949 1960. dataset already \ntime series class therefore class date manipulation required.Goal: want forecast number airline passengers time \\(h\\)\nhorizon using historical data 1949 1960.","code":"\nlibrary(ggfortify)\n\ndata(AirPassengers)\nAP <- AirPassengers\n\nautoplot(AP) +\n  labs(\n    x = \"Date\",\n    y = \"Passenger numbers (1000's)\",\n    title = \"Air Passengers from 1949 to 1961\"\n  )\n\nt <- length(AP)"},{"path":"origami.html","id":"rolling-origin","chapter":"3 Cross-validation","heading":"3.5.2.1 Rolling origin","text":"Rolling origin cross-validation scheme lends “online” algorithms,\nlarge streams data fit continually, final fit \nconstantly updated data acquired. general, rolling origin\nscheme defines initial training set, iteration size \ntraining set grows \\(m\\) observations reach time \\(t\\) particular\nfold. time points included training set always behind \nvalidation set time points; addition, might gap training\nvalidation times size \\(h\\).illustrate rolling origin cross-validation, show example\n3 folds. , first window size 15 time points, first\ntrain proposed algorithm. evaluate performance 10 time\npoints, gap size 5 training validation time points.\nfollowing fold, train algorithm longer stream data, 25\ntime points, including original 15 started . evaluate \nperformance 10 time points future.\nFIGURE 3.1: Rolling origin CV\nillustrate usage rolling origin cross-validation origami\npackage using function folds_rolling_origin(n, first_window, validation_size, gap, batch). order setup folds_rolling_origin(n, first_window, validation_size, gap, batch), need:total number time points want cross-validate;size first training set;size validation set;gap training validation set;size update training set per iteration CV.time-series \\(t=144\\) time points. Setting first_window \\(50\\),\nvalidation_size 10, gap 5 batch 20, get 4 time-series\nfolds; show first two .","code":"\nfolds <- folds_rolling_origin(\n  t,\n  first_window = 50, validation_size = 10, gap = 5, batch = 20\n)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n#> \n#> $validation_set\n#>  [1] 56 57 58 59 60 61 62 63 64 65\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n#> [51] 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\n#> \n#> $validation_set\n#>  [1] 76 77 78 79 80 81 82 83 84 85\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"rolling-window","chapter":"3 Cross-validation","heading":"3.5.2.2 Rolling window","text":"Instead adding time points training set per iteration, \nrolling window cross-validation scheme “rolls” training sample forward \n\\(m\\) time units. rolling window scheme might considered parametric\nsettings one wishes guard moment parameter drift \ndifficult model explicitly; also efficient computationally\ndemanding settings streaming data, large amounts training\ndata stored. contrast rolling origin CV, training sample \niteration rolling window scheme always .illustrate rolling window cross-validation 3 time-series folds\n. first window size 15 time points, first train \nproposed algorithm. previous illustration, evaluate performance\n10 time points, gap size 5 training validation time\npoints. However, next fold, train algorithm time points\naway origin (, 10 time points). Note size \ntraining set new fold first fold (15 time points).\nsetup keeps training sets comparable time (fold) compared\nrolling origin CV. evaluate performance proposed\nalgorithm 10 time points future.\nFIGURE 3.2: Rolling window CV\nillustrate usage rolling window cross-validation origami\npackage using function folds_rolling_window(n, window_size, validation_size, gap, batch). order setup folds_rolling_window(n, window_size, validation_size, gap, batch), need:total number time points want cross-validate;size training sets;size validation set;gap training validation set;size update training set per iteration CV.Setting window_size \\(50\\), validation_size 10, gap 5 \nbatch 20, also get 4 time-series folds; show first two .","code":"\nfolds <- folds_rolling_window(\n  t,\n  window_size = 50, validation_size = 10, gap = 5, batch = 20\n)\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n#> \n#> $validation_set\n#>  [1] 56 57 58 59 60 61 62 63 64 65\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1] 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\n#> [26] 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\n#> \n#> $validation_set\n#>  [1] 76 77 78 79 80 81 82 83 84 85\n#> \n#> attr(,\"class\")\n#> [1] \"fold\""},{"path":"origami.html","id":"rolling-origin-with-v-fold","chapter":"3 Cross-validation","heading":"3.5.2.3 Rolling origin with V-fold","text":"variant rolling origin scheme accounts sample dependence \nrolling-origin-\\(V\\)-fold cross-validation. contrast canonical rolling\norigin CV, samples training validation set , \nvariant encompasses \\(V\\)-fold CV addition time-series setup. \npredictions evaluated future times time-series units seen\ntraining step, allowing dependence samples time. One\ncan use rolling-origin-\\(v\\)-fold cross-validation origami package\nusing function folds_vfold_rolling_origin_pooled(n, t, id, time, V, first_window, validation_size, gap, batch). figure , show \\(V=2\\)\n\\(V\\)-folds, 2 time-series CV folds.\nFIGURE 3.3: Rolling origin V-fold CV\n","code":""},{"path":"origami.html","id":"rolling-window-with-v-fold","chapter":"3 Cross-validation","heading":"3.5.2.4 Rolling window with v-fold","text":"Analogous previous section, can extend rolling window CV support\nmultiple time-series arbitrary sample dependence. One can use \nrolling-window-\\(V\\)-fold cross-validation origami package using \nfunction folds_vfold_rolling_window_pooled(n, t, id, time, V, window_size, validation_size, gap, batch). figure , show \\(V=2\\) \\(V\\)-folds, \n2 time-series CV folds.\nFIGURE 3.4: Rolling window V-fold CV\n","code":""},{"path":"origami.html","id":"general-workflow-of-origami","chapter":"3 Cross-validation","heading":"3.6 General workflow of origami","text":"dive details, let’s take moment review \nbasic functionality origami R package. main function origami\ncross_validate. start , user must define fold structure \nfunction operates fold. passed cross_validate,\ncross_validate apply specified function fold, \ncombine fold-specific results meaningful way. see \naction later sections; now, provide specific details step\nprocess .","code":""},{"path":"origami.html","id":"define-folds","chapter":"3 Cross-validation","heading":"3.6.1 (1) Define folds","text":"folds object passed cross_validate list folds; lists can\ngenerated using make_folds function. fold consists list \ntraining index vector, validation index vector, fold_index (\norder list folds). function supports variety \ncross-validation schemes describe following section. make_folds\ncan balance across levels variable (strata_ids), can also keep\nobservations independent unit together (cluster).","code":""},{"path":"origami.html","id":"define-fold-function","chapter":"3 Cross-validation","heading":"3.6.2 (2) Define fold function","text":"cv_fun argument cross_validate function perform \noperation fold. first argument function must fold,\nreceive individual fold object operate . Additional arguments\ncan passed cv_fun using ... argument cross_validate. Within\nfunction, convenience functions training, validation \nfold_index can return various components fold object. training\nvalidation passed object, index sensible way.\ninstance, vector, index vector directly; \ndata.frame matrix, index rows. allows user easily\npartition data training validation sets. fold function must return\nnamed list results containing whatever fold-specific outputs generated.","code":""},{"path":"origami.html","id":"apply-cross_validate","chapter":"3 Cross-validation","heading":"3.6.3 (3) Apply cross_validate","text":"defining folds, cross_validate can used map cv_fun across\nfolds using future_lapply. means can easily parallelized\nspecifying parallelization scheme (.e., plan future\nparallelization framework R\n(???)). application cross_validate generates list\nresults. described , call cv_fun returns list \nresults, different elements type result care . main\nloop generates list individual lists results (sort \n“meta-list”). “meta-list” inverted one element\nper result type (list results fold). default,\ncombine_results used combine results type lists sensible\nmanner. results combined determined automatically examining \ndata types results first fold. can modified \nspecifying list arguments .combine_control.","code":""},{"path":"origami.html","id":"cross-validation-in-action","chapter":"3 Cross-validation","heading":"3.7 Cross-validation in action","text":"Let’s see origami action! following chapter learn use\ncross-validation Super Learner, can utilize power \ncross-validation build optimal ensembles algorithms, just use \nsingle statistical learning method.","code":""},{"path":"origami.html","id":"cross-validation-with-linear-regression","chapter":"3 Cross-validation","heading":"3.7.1 Cross-validation with linear regression","text":"First, load relevant R packages, set seed, load full\nWASH data . order illustrate cross-validation origami \nlinear regression, focus predicting weight--height Z-score\nwhz using available covariate data. stated previously, \nassume data independent identically distributed, ignoring cluster\nstructure imposed clinical trial design. sake illustration, \nwork subset data, remove samples missing data \ndataset; learn next chapter deal missingness.’s look data:can see covariates used prediction:Next, fit linear model full data, goal predicting \nweight--height Z-score whz using available covariate data. Let’s\ntry :can assess well model fits data comparing predictions \nlinear model true outcomes observed data set. well\nknown (standard) mean squared error. can extract lm model\nobject follows:mean squared error 0.86568. important problem arises\nassess model way - , trained linear\nregression model full data set assessed error full data\nset, using data. , course, generally interested \nwell model explains variation observed data; rather, \ninterested explanation provided model generalizes target\npopulation sample presumably derived. used \navailable data, honestly evaluate well model fits (thus\nexplains) variation population level.resolve issue, cross-validation allows particular procedure (e.g.,\nlinear regression) implemented subsets data, evaluating \nwell procedure fits testing (“validation”) set, thereby providing \nhonest evaluation error.can easily add cross-validation linear regression procedure using\norigami. First, let us define new function perform linear regression \nspecific partition data (called “fold”):cv_lm function rather simple: merely split available data \ntraining validation sets (using eponymous functions provided \norigami) fit linear model training set, evaluate model \nvalidation set. simple example origami considers \ncv_fun — functions using cross-validation perform particular routine\ninput data set. defined function, can simply generate \nset partitions using origami’s make_folds function, apply cv_lm\nfunction resultant folds object. , replicate \nre-substitution estimate error – “hand” – using\nfunctions make_folds cv_lm.(nearly) matches estimate error obtained .can honestly evaluate error V-fold cross-validation, \npartitions data \\(v\\) subsets, fitting model \\(v - 1\\) \nsubsets evaluating subset held testing. \nrepeated subset used validation. can easily apply \ncv_lm function using origami’s cross_validate (n.b., default \nperforms 10-fold cross-validation):performed 10-fold cross-validation, quickly notice previous\nestimate model error (resubstitution) bit optimistic. honest\nestimate error larger!","code":"\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# load data set and take a peek\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)\n\n# Remove missing data, then pick just the first 500 rows\nwashb_data <- washb_data %>%\n  drop_na() %>%\n  slice(1:500)\n\noutcome <- \"whz\"\ncovars <- colnames(washb_data)[-which(names(washb_data) == outcome)]\noutcome\n#> [1] \"whz\"\ncovars\n#>  [1] \"tr\"             \"fracode\"        \"month\"          \"aged\"          \n#>  [5] \"sex\"            \"momage\"         \"momedu\"         \"momheight\"     \n#>  [9] \"hfiacat\"        \"Nlt18\"          \"Ncomp\"          \"watmin\"        \n#> [13] \"elec\"           \"floor\"          \"walls\"          \"roof\"          \n#> [17] \"asset_wardrobe\" \"asset_table\"    \"asset_chair\"    \"asset_khat\"    \n#> [21] \"asset_chouki\"   \"asset_tv\"       \"asset_refrig\"   \"asset_bike\"    \n#> [25] \"asset_moto\"     \"asset_sewmach\"  \"asset_mobile\"\nlm_mod <- lm(whz ~ ., data = washb_data)\nsummary(lm_mod)\n#> \n#> Call:\n#> lm(formula = whz ~ ., data = washb_data)\n#> \n#> Residuals:\n#>     Min      1Q  Median      3Q     Max \n#> -2.8890 -0.6799 -0.0169  0.6595  3.1005 \n#> \n#> Coefficients:\n#>                                 Estimate Std. Error t value Pr(>|t|)   \n#> (Intercept)                     -1.89006    1.72022   -1.10   0.2725   \n#> trHandwashing                   -0.25276    0.17032   -1.48   0.1385   \n#> trNutrition                     -0.09695    0.15696   -0.62   0.5371   \n#> trNutrition + WSH               -0.09587    0.16528   -0.58   0.5622   \n#> trSanitation                    -0.27702    0.15846   -1.75   0.0811 . \n#> trWSH                           -0.02846    0.15967   -0.18   0.8586   \n#> trWater                         -0.07148    0.15813   -0.45   0.6515   \n#> fracodeN05160                    0.62355    0.30719    2.03   0.0430 * \n#> fracodeN05265                    0.38762    0.31011    1.25   0.2120   \n#> fracodeN05359                    0.10187    0.31329    0.33   0.7452   \n#> fracodeN06229                    0.30933    0.29766    1.04   0.2993   \n#> fracodeN06453                    0.08066    0.30006    0.27   0.7882   \n#> fracodeN06458                    0.43707    0.29970    1.46   0.1454   \n#> fracodeN06473                    0.45406    0.30912    1.47   0.1426   \n#> fracodeN06479                    0.60994    0.31463    1.94   0.0532 . \n#> fracodeN06489                    0.25923    0.31901    0.81   0.4169   \n#> fracodeN06500                    0.07539    0.35794    0.21   0.8333   \n#> fracodeN06502                    0.36748    0.30504    1.20   0.2290   \n#> fracodeN06505                    0.20038    0.31560    0.63   0.5258   \n#> fracodeN06516                    0.55455    0.29807    1.86   0.0635 . \n#> fracodeN06524                    0.49429    0.31423    1.57   0.1164   \n#> fracodeN06528                    0.75966    0.31060    2.45   0.0148 * \n#> fracodeN06531                    0.36856    0.30155    1.22   0.2223   \n#> fracodeN06862                    0.56932    0.29293    1.94   0.0526 . \n#> fracodeN08002                    0.36779    0.26846    1.37   0.1714   \n#> month                            0.17161    0.10865    1.58   0.1149   \n#> aged                            -0.00336    0.00112   -3.00   0.0029 **\n#> sexmale                          0.12352    0.09203    1.34   0.1802   \n#> momage                          -0.01379    0.00973   -1.42   0.1570   \n#> momeduPrimary (1-5y)            -0.13214    0.15225   -0.87   0.3859   \n#> momeduSecondary (>5y)            0.12632    0.16041    0.79   0.4314   \n#> momheight                        0.00512    0.00919    0.56   0.5776   \n#> hfiacatMildly Food Insecure      0.05804    0.19341    0.30   0.7643   \n#> hfiacatModerately Food Insecure -0.01362    0.12887   -0.11   0.9159   \n#> hfiacatSeverely Food Insecure   -0.13447    0.25418   -0.53   0.5970   \n#> Nlt18                           -0.02557    0.04060   -0.63   0.5291   \n#> Ncomp                            0.00179    0.00762    0.23   0.8145   \n#> watmin                           0.01347    0.00861    1.57   0.1182   \n#> elec                             0.08906    0.10700    0.83   0.4057   \n#> floor                           -0.17763    0.17734   -1.00   0.3171   \n#> walls                           -0.03001    0.21445   -0.14   0.8888   \n#> roof                            -0.03716    0.49214   -0.08   0.9399   \n#> asset_wardrobe                  -0.05754    0.13736   -0.42   0.6755   \n#> asset_table                     -0.22079    0.12276   -1.80   0.0728 . \n#> asset_chair                      0.28012    0.13750    2.04   0.0422 * \n#> asset_khat                       0.02306    0.11766    0.20   0.8447   \n#> asset_chouki                    -0.13943    0.14084   -0.99   0.3227   \n#> asset_tv                         0.17723    0.12972    1.37   0.1726   \n#> asset_refrig                     0.12613    0.23162    0.54   0.5863   \n#> asset_bike                      -0.02568    0.10083   -0.25   0.7990   \n#> asset_moto                      -0.32094    0.19944   -1.61   0.1083   \n#> asset_sewmach                    0.05090    0.17795    0.29   0.7750   \n#> asset_mobile                     0.01420    0.14972    0.09   0.9245   \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.984 on 447 degrees of freedom\n#> Multiple R-squared:  0.129,  Adjusted R-squared:  0.0277 \n#> F-statistic: 1.27 on 52 and 447 DF,  p-value: 0.104\n(err <- mean(resid(lm_mod)^2))\n#> [1] 0.86568\ncv_lm <- function(fold, data, reg_form) {\n  # get name and index of outcome variable from regression formula\n  out_var <- as.character(unlist(str_split(reg_form, \" \"))[1])\n  out_var_ind <- as.numeric(which(colnames(data) == out_var))\n\n  # split up data into training and validation sets\n  train_data <- training(data)\n  valid_data <- validation(data)\n\n  # fit linear model on training set and predict on validation set\n  mod <- lm(as.formula(reg_form), data = train_data)\n  preds <- predict(mod, newdata = valid_data)\n  valid_data <- as.data.frame(valid_data)\n\n  # capture results to be returned as output\n  out <- list(\n    coef = data.frame(t(coef(mod))),\n    SE = (preds - valid_data[, out_var_ind])^2\n  )\n  return(out)\n}\n# re-substitution estimate\nresub <- make_folds(washb_data, fold_fun = folds_resubstitution)[[1]]\nresub_results <- cv_lm(fold = resub, data = washb_data, reg_form = \"whz ~ .\")\nmean(resub_results$SE, na.rm = TRUE)\n#> [1] 0.86568\n# cross-validated estimate\nfolds <- make_folds(washb_data)\ncvlm_results <- cross_validate(\n  cv_fun = cv_lm, folds = folds, data = washb_data, reg_form = \"whz ~ .\",\n  use_future = FALSE\n)\nmean(cvlm_results$SE, na.rm = TRUE)\n#> [1] 1.35"},{"path":"origami.html","id":"cross-validation-with-random-forests","chapter":"3 Cross-validation","heading":"3.7.2 Cross-validation with random forests","text":"examine origami , let us return example analysis using \nWASH data set. , write new cv_fun type object. example, \nuse Breiman’s randomForest (???):, writing cv_rf function cross-validate randomForest, used\nprevious function cv_lm example. now, individual cv_fun must\nwritten hand; however, future releases, wrapper may available \nsupport auto-generating cv_funs used origami., use cross_validate apply new cv_rf function folds\nobject generated make_folds.Using 10-fold cross-validation (default), obtain honest estimate \nprediction error random forests. , gather use \norigami’s cross_validate procedure can generalized arbitrary estimation\ntechniques, given availability appropriate cv_fun function.","code":"\n# make sure to load the package!\nlibrary(randomForest)\n\ncv_rf <- function(fold, data, reg_form) {\n  # get name and index of outcome variable from regression formula\n  out_var <- as.character(unlist(str_split(reg_form, \" \"))[1])\n  out_var_ind <- as.numeric(which(colnames(data) == out_var))\n\n  # define training and validation sets based on input object of class \"folds\"\n  train_data <- training(data)\n  valid_data <- validation(data)\n\n  # fit Random Forest regression on training set and predict on holdout set\n  mod <- randomForest(formula = as.formula(reg_form), data = train_data)\n  preds <- predict(mod, newdata = valid_data)\n  valid_data <- as.data.frame(valid_data)\n\n  # define output object to be returned as list (for flexibility)\n  out <- list(\n    coef = data.frame(mod$coefs),\n    SE = ((preds - valid_data[, out_var_ind])^2)\n  )\n  return(out)\n}\n# now, let's cross-validate...\nfolds <- make_folds(washb_data)\ncvrf_results <- cross_validate(\n  cv_fun = cv_rf, folds = folds, \n  data = washb_data, reg_form = \"whz ~ .\",\n  use_future = FALSE\n)\nmean(cvrf_results$SE)\n#> [1] 1.0271"},{"path":"origami.html","id":"cross-validation-with-arima","chapter":"3 Cross-validation","heading":"3.7.3 Cross-validation with arima","text":"Cross-validation can also used forecast model selection time series\nsetting. , partitioning scheme mirrors application \nforecasting model: ’ll train data past observations (either \navailable recent subset), use model fit predict next\nobservations. consider AirPassengers dataset , monthly time\nseries passenger air traffic thousands people.Suppose want pick two forecasting models different arima\nconfigurations. can evaluating forecasting performance.\nFirst, set appropriate cross-validation scheme time-series.default, folds_rolling_origin increase size training set \none time point fold. followed default option, 85\nfolds train! Luckily, can pass batch option \nfolds_rolling_origin tells increase size training set \n10 points iteration. Since want forecast immediate next point,\ngap argument remains default (0).arima model AR component seems better fit data.","code":"\ndata(AirPassengers)\nprint(AirPassengers)\n#>      Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n#> 1949 112 118 132 129 121 135 148 148 136 119 104 118\n#> 1950 115 126 141 135 125 149 170 170 158 133 114 140\n#> 1951 145 150 178 163 172 178 199 199 184 162 146 166\n#> 1952 171 180 193 181 183 218 230 242 209 191 172 194\n#> 1953 196 196 236 235 229 243 264 272 237 211 180 201\n#> 1954 204 188 235 227 234 264 302 293 259 229 203 229\n#> 1955 242 233 267 269 270 315 364 347 312 274 237 278\n#> 1956 284 277 317 313 318 374 413 405 355 306 271 306\n#> 1957 315 301 356 348 355 422 465 467 404 347 305 336\n#> 1958 340 318 362 348 363 435 491 505 404 359 310 337\n#> 1959 360 342 406 396 420 472 548 559 463 407 362 405\n#> 1960 417 391 419 461 472 535 622 606 508 461 390 432\nfolds <- make_folds(AirPassengers,\n  fold_fun = folds_rolling_origin,\n  first_window = 36, validation_size = 24, batch = 10\n)\n\n# How many folds where generated?\nlength(folds)\n#> [1] 9\n\n# Examine the first 2 folds.\nfolds[[1]]\n#> $v\n#> [1] 1\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36\n#> \n#> $validation_set\n#>  [1] 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\nfolds[[2]]\n#> $v\n#> [1] 2\n#> \n#> $training_set\n#>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46\n#> \n#> $validation_set\n#>  [1] 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\n#> \n#> attr(,\"class\")\n#> [1] \"fold\"\n# make sure to load the package!\nlibrary(forecast)\n\n# function to calculate cross-validated squared error\ncv_forecasts <- function(fold, data) {\n  # Get training and validation data\n  train_data <- training(data)\n  valid_data <- validation(data)\n  valid_size <- length(valid_data)\n\n  train_ts <- ts(log10(train_data), frequency = 12)\n\n  # First arima model\n  arima_fit <- arima(train_ts, c(0, 1, 1),\n    seasonal = list(\n      order = c(0, 1, 1),\n      period = 12\n    )\n  )\n  raw_arima_pred <- predict(arima_fit, n.ahead = valid_size)\n  arima_pred <- 10^raw_arima_pred$pred\n  arima_MSE <- mean((arima_pred - valid_data)^2)\n\n  # Second arima model\n  arima_fit2 <- arima(train_ts, c(5, 1, 1),\n    seasonal = list(\n      order = c(0, 1, 1),\n      period = 12\n    )\n  )\n  raw_arima_pred2 <- predict(arima_fit2, n.ahead = valid_size)\n  arima_pred2 <- 10^raw_arima_pred2$pred\n  arima_MSE2 <- mean((arima_pred2 - valid_data)^2)\n\n  out <- list(mse = data.frame(\n    fold = fold_index(),\n    arima = arima_MSE, arima2 = arima_MSE2\n  ))\n  return(out)\n}\n\nmses <- cross_validate(\n  cv_fun = cv_forecasts, folds = folds, data = AirPassengers,\n  use_future = FALSE\n)\nmses$mse\n#>   fold   arima  arima2\n#> 1    1   68.21  137.28\n#> 2    2  319.68  313.15\n#> 3    3  578.35  713.36\n#> 4    4  428.69  505.31\n#> 5    5  407.33  371.27\n#> 6    6  281.82  250.99\n#> 7    7  827.56  910.12\n#> 8    8 2099.59 2213.15\n#> 9    9  398.37  293.38\ncolMeans(mses$mse[, c(\"arima\", \"arima2\")])\n#>  arima arima2 \n#> 601.07 634.22"},{"path":"origami.html","id":"exercises-1","chapter":"3 Cross-validation","heading":"3.8 Exercises","text":"","code":""},{"path":"origami.html","id":"review-of-key-concepts","chapter":"3 Cross-validation","heading":"3.8.1 Review of Key Concepts","text":"Compare contrast V-fold cross-validation resubstitution\ncross-validation. differences two methods?\nsimilar? Describe scenario use one \n.Compare contrast V-fold cross-validation resubstitution\ncross-validation. differences two methods?\nsimilar? Describe scenario use one \n.advantages disadvantages \\(v\\)-fold CV relative :\nholdout CV?\nleave-one-CV?\nadvantages disadvantages \\(v\\)-fold CV relative :holdout CV?leave-one-CV?can’t use V-fold cross-validation time-series data?can’t use V-fold cross-validation time-series data?use rolling window origin non-stationary time-series? ?use rolling window origin non-stationary time-series? ?","code":""},{"path":"origami.html","id":"the-ideas-in-action","chapter":"3 Cross-validation","heading":"3.8.2 The Ideas in Action","text":"Let \\(Y\\) binary variable \\(P(Y=1 \\mid W) = 0.01\\). kind \ncross-validation scheme used rare outcome? can \norigami package?Let \\(Y\\) binary variable \\(P(Y=1 \\mid W) = 0.01\\). kind \ncross-validation scheme used rare outcome? can \norigami package?Consider WASH benefits dataset presented chapter. can \ninclude cluster information cross-validation? can \norigami package?Consider WASH benefits dataset presented chapter. can \ninclude cluster information cross-validation? can \norigami package?","code":""},{"path":"origami.html","id":"advanced-topics","chapter":"3 Cross-validation","heading":"3.8.3 Advanced Topics","text":"Think dataset arbitrary spatial dependence, know\nextent dependence, groups formed dependence clear\nspillover effects. kind cross-validation can use?Think dataset arbitrary spatial dependence, know\nextent dependence, groups formed dependence clear\nspillover effects. kind cross-validation can use?Continuing last problem, kind procedure, cross-validation\nmethod, can use spatial dependence clearly defined \nprevious problem?Continuing last problem, kind procedure, cross-validation\nmethod, can use spatial dependence clearly defined \nprevious problem?Consider classification problem large number predictors. \nstatistician proposes following analysis:\nFirst screen predictors, leaving covariates strong\ncorrelation class labels.\nFit algorithm using subset highly correlated covariates.\nUse cross-validation estimate tuning parameters performance\nproposed algorithm.\ncorrect application cross-validation? ?Consider classification problem large number predictors. \nstatistician proposes following analysis:First screen predictors, leaving covariates strong\ncorrelation class labels.Fit algorithm using subset highly correlated covariates.Use cross-validation estimate tuning parameters performance\nproposed algorithm.correct application cross-validation? ?","code":""},{"path":"sl3.html","id":"sl3","chapter":"4 Super (Machine) Learning","heading":"4 Super (Machine) Learning","text":"Ivana Malenica Rachael PhillipsBased sl3 R package Jeremy\nCoyle, Nima Hejazi, Ivana Malenica, Rachael Phillips, Oleg Sofrygin.Updated: 2021-07-20","code":""},{"path":"sl3.html","id":"learning-objectives-3","chapter":"4 Super (Machine) Learning","heading":"Learning Objectives","text":"end chapter able :Select loss function appropriate functional parameter \nestimated.Assemble ensemble learners based properties identify \nfeatures support.Customize learner hyperparameters incorporate diversity different\nsettings.Select subset available covariates pass variables \nmodeling algorithm.Fit ensemble nested cross-validation obtain estimate \nperformance ensemble .Obtain sl3 variable importance metrics.Interpret discrete continuous Super Learner fits.Rationalize need remove bias Super Learner make \noptimal bias–variance tradeoff parameter interest.","code":""},{"path":"sl3.html","id":"motivation-1","chapter":"4 Super (Machine) Learning","heading":"Motivation","text":"common task data analysis prediction — using observed data \nlearn function, can used map new input variables \npredicted outcome.\ndata, algorithms can model complex function necessary \nadequately model data. data, main terms regression model might\nfit data quite well.Super Learner (SL), ensemble learner, solves issue, allowing \ncombination algorithms simplest (intercept-) complex\n(neural nets, random forests, SVM, etc).works using cross-validation manner guarantees \nresulting fit good possible, given learners provided.","code":""},{"path":"sl3.html","id":"introduction-2","chapter":"4 Super (Machine) Learning","heading":"Introduction","text":"Chapter 1, introduced Roadmap Targeted\nLearning general template translate real-world data\napplications formal statistical estimation problems. first steps \nroadmap define statistical estimation problem, establishData random variable, equivalently, realization \nparticular experiment/study.statistical model set possible probability distributions \ngiven rise observed data. know, example, \nobservations independent identically distributed.translation scientific question, often causal, \ntarget estimand.Note estimand causal, step 3 also requires establishing\nidentifiability estimand observed data, possible\nnon-testable assumptions may necessarily reasonable. Still, \ntarget quantity valid statistical interpretation. See causal target\nparameters detail causal models identifiability.Now defined statistical estimation problem, ready \nconstruct TMLE; asymptotically linear efficient substitution\nestimator estimand. first step estimation procedure\ninitial estimate data-generating distribution, relevant part\ndistribution needed evaluate target parameter. \ninitial estimation, use Super Learner (SL) (???).SL provides important step creating robust estimator. loss-\nfunction- based tool uses cross-validation obtain best prediction \ntarget parameter, based weighted average library machine\nlearning algorithms. library machine learning algorithms consists \nfunctions (“learners” sl3 nomenclature) think might \nconsistent true data-generating distribution. “consistent \ntrue data-generating distribution”, mean algorithms selected \nviolate subject-matter knowledge experiment generated \ndata. Also, library contain diversity algorithms range \nparametric regression models multi-step algorithms involving screening\ncovariates, penalizations, optimizing tuning parameters, etc.ensembling collection algorithms weights (“metalearning” \nsl3 nomenclature) shown adaptive robust, even small\nsamples (???). SL proven perform asymptotically well\nbest possible prediction algorithm library (???; ???).","code":""},{"path":"sl3.html","id":"why-use-the-super-learner","chapter":"4 Super (Machine) Learning","heading":"Why use the Super Learner?","text":"prediction, one can use cross-validated risk empirically determine\nrelative performance SL competing methods.tested different algorithms actual\ndata looked performance (e.g., MSE prediction), never one\nalgorithm always win (see ).shows results study, comparing fits several\ndifferent learners, including SL algorithms.SL performs asymptotically well best possible weighted combination.including competitors library candidate estimators (GLMs,\nneural nets, SVMs, random forest, etc.), SL asymptotically\noutperform competitors — even set competitors \nallowed grow polynomial sample size.Motivates name “Super Learner”: provides system combining many\nestimators improved estimator.","code":""},{"path":"sl3.html","id":"general-overview-of-the-algorithm","chapter":"4 Super (Machine) Learning","heading":"General Overview of the Algorithm","text":"","code":""},{"path":"sl3.html","id":"what-is-cross-validation-and-how-does-it-work","chapter":"4 Super (Machine) Learning","heading":"4.0.0.1 What is cross-validation and how does it work?","text":"many different cross-validation schemes, designed \naccommodate different study designs, data structures, prediction\nproblems.figure shows example \\(V\\)-fold cross-validation \\(V=10\\)\nfolds.","code":""},{"path":"sl3.html","id":"general-step-by-step-overview-of-the-super-learner-algorithm","chapter":"4 Super (Machine) Learning","heading":"4.0.0.2 General step-by-step overview of the Super Learner algorithm","text":"Break sample evenly V-folds (say V=10).10 folds, remove portion sample (kept \nvalidation sample) remaining used fit learners (training\nsample).Fit learner training sample (note, learners \ninternal cross-validation procedure methods select tuning\nparameters).observation corresponding validation sample, predict \noutcome using learners, \\(p\\) learners, \n\\(p\\) predictions.Take another validation sample repeat V-sets data\nremoved.Compare cross-validated fit learners across observations based\nspecified loss function (e.g., squared error, negative log-likelihood, etc)\ncalculating corresponding average loss (risk).Either:\nchoose learner smallest risk apply learner entire data\nset (resulting SL fit),\nweighted average learners minimize cross-validated risk\n(construct ensemble learners), \nre-fitting learners original data set, \nuse weights get SL fit.\n\nchoose learner smallest risk apply learner entire data\nset (resulting SL fit),weighted average learners minimize cross-validated risk\n(construct ensemble learners), \nre-fitting learners original data set, \nuse weights get SL fit.\nre-fitting learners original data set, anduse weights get SL fit.Note, entire procedure can cross-validated get consistent\nestimate future performance SL fit.","code":""},{"path":"sl3.html","id":"how-to-pick-a-library-of-candidate-learners","chapter":"4 Super (Machine) Learning","heading":"4.0.0.3 How to pick a library of candidate learners?","text":"library simply collection algorithms.algorithms library come contextual knowledge \nlarge set “default” algorithms.algorithms may range simple linear regression model multi-step\nalgorithms involving screening covariates, penalizations, optimizing tuning\nparameters, etc.","code":""},{"path":"sl3.html","id":"summary-of-super-learners-foundations","chapter":"4 Super (Machine) Learning","heading":"Summary of Super Learner’s Foundations","text":"use loss function \\(L\\) assign measure performance \nlearner \\(\\psi\\) applied data \\(O\\), subsequently compare\nperformance across learners. generally, \\(L\\) maps every\n\\(\\psi \\\\mathbb{R}\\) \\(L(\\psi) : (O) \\mapsto L(\\psi)(O)\\). use terms\n“learner”, “algorithm”, “estimator” interchangeably.\nimportant recall \\(\\psi\\) estimator \\(\\psi_0\\), \nunknown true parameter value \\(P_0\\).\nvalid loss function expectation (risk) minimized \ntrue value parameter \\(\\psi_0\\). Thus, minimizing expected\nloss bring estimator \\(\\psi\\) closer true \\(\\psi_0\\).\nexample, say observe learning data set \\(O_i=(Y_i,X_i)\\), \n\\(=1, \\ldots, n\\) independent identically distributed observations,\n\\(Y_i\\) continuous outcome interest, \\(X_i\\) set \ncovariates. Also, let objective estimate function\n\\(\\psi_0: X \\mapsto \\psi_0(X) = \\mathbb{E}_0(Y \\mid X)\\), \nconditional mean outcome given covariates. function can expressed\nminimizer expected squared error loss:\n\\(\\psi_0 = \\text{argmin}_{\\psi} \\mathbb{E}[L(O,\\psi(X))]\\), \n\\(L(O,\\psi(X)) = (Y − \\psi(X))^2\\).\ncan estimate loss substituting empirical distribution \ndata \\(P_n\\) true unknown distribution observed data\n\\(P_0\\).\nAlso, can use cross-validated risk empirically determine \nrelative performance estimator (.e., candidate learner), \nperhaps ’s performance compares estimators.\ntested different estimators actual data looked \nperformance (e.g., MSE predictions across learners), can see\nalgorithm (weighted combination) lowest risk, thus\nclosest true \\(\\psi_0\\).\nuse loss function \\(L\\) assign measure performance \nlearner \\(\\psi\\) applied data \\(O\\), subsequently compare\nperformance across learners. generally, \\(L\\) maps every\n\\(\\psi \\\\mathbb{R}\\) \\(L(\\psi) : (O) \\mapsto L(\\psi)(O)\\). use terms\n“learner”, “algorithm”, “estimator” interchangeably.important recall \\(\\psi\\) estimator \\(\\psi_0\\), \nunknown true parameter value \\(P_0\\).valid loss function expectation (risk) minimized \ntrue value parameter \\(\\psi_0\\). Thus, minimizing expected\nloss bring estimator \\(\\psi\\) closer true \\(\\psi_0\\).example, say observe learning data set \\(O_i=(Y_i,X_i)\\), \n\\(=1, \\ldots, n\\) independent identically distributed observations,\n\\(Y_i\\) continuous outcome interest, \\(X_i\\) set \ncovariates. Also, let objective estimate function\n\\(\\psi_0: X \\mapsto \\psi_0(X) = \\mathbb{E}_0(Y \\mid X)\\), \nconditional mean outcome given covariates. function can expressed\nminimizer expected squared error loss:\n\\(\\psi_0 = \\text{argmin}_{\\psi} \\mathbb{E}[L(O,\\psi(X))]\\), \n\\(L(O,\\psi(X)) = (Y − \\psi(X))^2\\).can estimate loss substituting empirical distribution \ndata \\(P_n\\) true unknown distribution observed data\n\\(P_0\\).Also, can use cross-validated risk empirically determine \nrelative performance estimator (.e., candidate learner), \nperhaps ’s performance compares estimators.tested different estimators actual data looked \nperformance (e.g., MSE predictions across learners), can see\nalgorithm (weighted combination) lowest risk, thus\nclosest true \\(\\psi_0\\).cross-validated empirical risk algorithm defined \nempirical mean validation sample loss algorithm fitted\ntraining sample, averaged across splits data.cross-validated empirical risk algorithm defined \nempirical mean validation sample loss algorithm fitted\ntraining sample, averaged across splits data.discrete Super Learner, cross-validation selector, algorithm\nlibrary minimizes cross-validated empirical risk.discrete Super Learner, cross-validation selector, algorithm\nlibrary minimizes cross-validated empirical risk.continuous/ensemble Super Learner, often referred Super Learner\nweighted average library algorithms, weights \nchosen minimize cross-validated empirical risk library.\nRestricting weights positive sum one (.e., convex\ncombination) shown improve upon discrete Super Learner\n(???; ???). notion weighted combinations \nintroduced (???) neural networks adapted \nregressions (???).continuous/ensemble Super Learner, often referred Super Learner\nweighted average library algorithms, weights \nchosen minimize cross-validated empirical risk library.\nRestricting weights positive sum one (.e., convex\ncombination) shown improve upon discrete Super Learner\n(???; ???). notion weighted combinations \nintroduced (???) neural networks adapted \nregressions (???).Cross-validation proven optimal selection among estimators. \nresult established oracle inequality cross-validation\nselector among collection candidate estimators (???; ???). condition loss function uniformly\nbounded, guaranteed sl3.Cross-validation proven optimal selection among estimators. \nresult established oracle inequality cross-validation\nselector among collection candidate estimators (???; ???). condition loss function uniformly\nbounded, guaranteed sl3.","code":""},{"path":"sl3.html","id":"sl3-microwave-dinner-implementation","chapter":"4 Super (Machine) Learning","heading":"sl3 “Microwave Dinner” Implementation","text":"begin illustrating core functionality SL algorithm \nimplemented sl3.sl3 implementation consists following steps:Load necessary libraries dataDefine machine learning taskMake SL creating library base learners metalearnerTrain SL machine learning taskObtain predicted values","code":""},{"path":"sl3.html","id":"wash-benefits-study-example-1","chapter":"4 Super (Machine) Learning","heading":"WASH Benefits Study Example","text":"Using WASH Benefits Bangladesh data, interested predicting\nweight--height z-score whz using available covariate data. \ninformation dataset, data work , \ndescribed chapter tlverse\nhandbook. Let’s begin!","code":""},{"path":"sl3.html","id":"load-the-necessary-libraries-and-data","chapter":"4 Super (Machine) Learning","heading":"0. Load the necessary libraries and data","text":"First, load relevant R packages, set seed, load data.","code":"\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(SuperLearner)\nlibrary(origami)\nlibrary(sl3)\nlibrary(knitr)\nlibrary(kableExtra)\n\n# load data set and take a peek\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)\nhead(washb_data) %>%\n  kable() %>%\n  kableExtra:::kable_styling(fixed_thead = T) %>%\n  scroll_box(width = \"100%\", height = \"300px\")"},{"path":"sl3.html","id":"define-the-machine-learning-task","chapter":"4 Super (Machine) Learning","heading":"1. Define the machine learning task","text":"define machine learning “task” (predict weight--height Z-score\nwhz using available covariate data), need create sl3_Task\nobject.sl3_Task keeps track roles variables play machine\nlearning problem, data, metadata (e.g., observational-level\nweights, IDs, offset).Also, missing outcomes, need set drop_missing_outcome = TRUE create task. next analysis, IST stroke trial\ndata, missing outcome. following chapter, need \nestimate “missingness mechanism”; conditional probably \noutcome observed, given history (.e., variables measured\nmissingness). Estimating missingness mechanism requires learning\nprediction function outputs predicted probability unit\nmissing, given history.warning important. task just imputed missing covariates us.\nSpecifically, covariate column missing values, sl3 uses \nmedian impute missing continuous covariates, mode impute binary\ncategorical covariates.Also, covariate column missing values, sl3 adds additional\ncolumn indicating whether value imputed, particularly\nhandy missingness data might informative.Also, notice specify number folds, loss function\ntask. default cross-validation scheme V-fold, \\(V=10\\) number\nfolds.Let’s visualize washb_task:can’t see print task, default cross-validation fold\nstructure (\\(V\\)-fold cross-validation \\(V\\)=10 folds) created \ndefined task.R6 Tip: type washb_task$ press “tab” button (\nneed press “tab” twice ’re RStudio), can view \nactive public fields methods can accessed washb_task\nobject.","code":"\n# specify the outcome and covariates\noutcome <- \"whz\"\ncovars <- colnames(washb_data)[-which(names(washb_data) == outcome)]\n\n# create the sl3 task\nwashb_task <- make_sl3_Task(\n  data = washb_data,\n  covariates = covars,\n  outcome = outcome\n)\n#> Warning in process_data(data, nodes, column_names = column_names, flag = flag, :\n#> Missing covariate data detected: imputing covariates.\nwashb_task\n#> A sl3 Task with 4695 obs and these nodes:\n#> $covariates\n#>  [1] \"tr\"              \"fracode\"         \"month\"           \"aged\"           \n#>  [5] \"sex\"             \"momage\"          \"momedu\"          \"momheight\"      \n#>  [9] \"hfiacat\"         \"Nlt18\"           \"Ncomp\"           \"watmin\"         \n#> [13] \"elec\"            \"floor\"           \"walls\"           \"roof\"           \n#> [17] \"asset_wardrobe\"  \"asset_table\"     \"asset_chair\"     \"asset_khat\"     \n#> [21] \"asset_chouki\"    \"asset_tv\"        \"asset_refrig\"    \"asset_bike\"     \n#> [25] \"asset_moto\"      \"asset_sewmach\"   \"asset_mobile\"    \"delta_momage\"   \n#> [29] \"delta_momheight\"\n#> \n#> $outcome\n#> [1] \"whz\"\n#> \n#> $id\n#> NULL\n#> \n#> $weights\n#> NULL\n#> \n#> $offset\n#> NULL\n#> \n#> $time\n#> NULL\nlength(washb_task$folds) # how many folds?\n#> [1] 10\n\nhead(washb_task$folds[[1]]$training_set) # row indexes for fold 1 training\n#> [1] 1 2 3 4 5 6\nhead(washb_task$folds[[1]]$validation_set) # row indexes for fold 1 validation\n#> [1] 12 21 29 41 43 53\n\nany(\n  washb_task$folds[[1]]$training_set %in% washb_task$folds[[1]]$validation_set\n)\n#> [1] FALSE"},{"path":"sl3.html","id":"make-a-super-learner","chapter":"4 Super (Machine) Learning","heading":"2. Make a Super Learner","text":"Now defined machine learning problem sl3_Task, \nready “make” Super Learner (SL). requires specification ofA set candidate machine learning algorithms, also commonly referred \n“library” “learners”. set include diversity algorithms\nbelieved consistent true data-generating distribution.metalearner, ensemble base learners.might also incorporateFeature selection, pass subset predictors algorithm.Hyperparameter specification, tune base learners.Learners properties indicate features support. may use\nsl3_list_properties() get list properties supported least\none learner.Since continuous outcome, may identify learners support\noutcome type sl3_list_learners().Now idea learners, can construct using \nmake_learner function new method.can customize learner hyperparameters incorporate diversity different\nsettings. Documentation learners hyperparameters can found\nsl3 Learners\nReference.can use Lrnr_define_interactions define interaction terms among\ncovariates. interactions supplied list character vectors,\nvector specifies interaction. example, specify\ninteractions (1) tr (whether subject received \nWASH intervention) elec (whether subject electricity); \n(2) tr hfiacat (subject’s level food security).just defined incomplete. order fit learners \ninteractions, need create Pipeline. Pipeline set learners\nfit sequentially, fit one learner used define \ntask next learner. need create Pipeline interaction\ndefining learner another learner incorporate terms fitting\nmodel. Let’s create learner pipeline fit linear model \ncombination main terms interactions terms, specified \nlrn_interaction.can also include learners SuperLearner R package.fun trick create customized learners grid parameters.see Lrnr_caret called sl3_list_learners(c(\"binomial\"))? \nneed specify use popular algorithm candidate SL \nalgorithm want tune, passed method caret::train().\ndefault method parameter selection criterion set “CV”\ninstead caret::train() default boot. summary metric used \nselect optimal model RMSE continuous outcomes Accuracy \ncategorical binomial outcomes.order assemble library learners, need “stack” \ntogether.Stack special learner interface \nlearners. makes stack special combines multiple learners \ntraining simultaneously, predictions can either combined\ncompared.can also stack learners first creating vector, \ninstantiating stack. prefer method, since easily allows us \nmodify names learners.’re jumping ahead bit, let’s check something quickly. ’s\nstraightforward, just one step, set stack \nlearners train cross-validated manner.","code":"\nsl3_list_properties()\n#>  [1] \"binomial\"      \"categorical\"   \"continuous\"    \"cv\"           \n#>  [5] \"density\"       \"h2o\"           \"ids\"           \"importance\"   \n#>  [9] \"offset\"        \"preprocessing\" \"sampling\"      \"screener\"     \n#> [13] \"timeseries\"    \"weights\"       \"wrapper\"\nsl3_list_learners(\"continuous\")\n#>  [1] \"Lrnr_arima\"                     \"Lrnr_bartMachine\"              \n#>  [3] \"Lrnr_bayesglm\"                  \"Lrnr_bilstm\"                   \n#>  [5] \"Lrnr_bound\"                     \"Lrnr_caret\"                    \n#>  [7] \"Lrnr_cv_selector\"               \"Lrnr_dbarts\"                   \n#>  [9] \"Lrnr_earth\"                     \"Lrnr_expSmooth\"                \n#> [11] \"Lrnr_gam\"                       \"Lrnr_gbm\"                      \n#> [13] \"Lrnr_glm\"                       \"Lrnr_glm_fast\"                 \n#> [15] \"Lrnr_glmnet\"                    \"Lrnr_grf\"                      \n#> [17] \"Lrnr_gru_keras\"                 \"Lrnr_gts\"                      \n#> [19] \"Lrnr_h2o_glm\"                   \"Lrnr_h2o_grid\"                 \n#> [21] \"Lrnr_hal9001\"                   \"Lrnr_HarmonicReg\"              \n#> [23] \"Lrnr_hts\"                       \"Lrnr_lightgbm\"                 \n#> [25] \"Lrnr_lstm_keras\"                \"Lrnr_mean\"                     \n#> [27] \"Lrnr_multiple_ts\"               \"Lrnr_nnet\"                     \n#> [29] \"Lrnr_nnls\"                      \"Lrnr_optim\"                    \n#> [31] \"Lrnr_pkg_SuperLearner\"          \"Lrnr_pkg_SuperLearner_method\"  \n#> [33] \"Lrnr_pkg_SuperLearner_screener\" \"Lrnr_polspline\"                \n#> [35] \"Lrnr_randomForest\"              \"Lrnr_ranger\"                   \n#> [37] \"Lrnr_rpart\"                     \"Lrnr_rugarch\"                  \n#> [39] \"Lrnr_screener_correlation\"      \"Lrnr_solnp\"                    \n#> [41] \"Lrnr_stratified\"                \"Lrnr_svm\"                      \n#> [43] \"Lrnr_tsDyn\"                     \"Lrnr_xgboost\"\n# choose base learners\nlrn_glm <- make_learner(Lrnr_glm)\nlrn_mean <- Lrnr_mean$new()\nlrn_lasso <- make_learner(Lrnr_glmnet) # alpha default is 1\nlrn_ridge <- Lrnr_glmnet$new(alpha = 0)\nlrn_enet.5 <- make_learner(Lrnr_glmnet, alpha = 0.5)\n\nlrn_polspline <- Lrnr_polspline$new()\n\nlrn_ranger100 <- make_learner(Lrnr_ranger, num.trees = 100)\n\nlrn_hal_faster <- Lrnr_hal9001$new(max_degree = 2, reduce_basis = 0.05)\n\nxgb_fast <- Lrnr_xgboost$new() # default with nrounds = 20 is pretty fast\nxgb_50 <- Lrnr_xgboost$new(nrounds = 50)\ninteractions <- list(c(\"elec\", \"tr\"), c(\"tr\", \"hfiacat\"))\n# main terms as well as the interactions above will be included\nlrn_interaction <- make_learner(Lrnr_define_interactions, interactions)\n# we already instantiated a linear model learner, no need to do that again\nlrn_glm_interaction <- make_learner(Pipeline, lrn_interaction, lrn_glm)\nlrn_glm_interaction\n#> [1] \"Lrnr_define_interactions_TRUE\"\n#> [1] \"Lrnr_glm_TRUE\"\nlrn_bayesglm <- Lrnr_pkg_SuperLearner$new(\"SL.bayesglm\")\n# I like to crock pot my SLs\ngrid_params <- list(\n  cost = c(0.01, 0.1, 1, 10, 100, 1000),\n  gamma = c(0.001, 0.01, 0.1, 1),\n  kernel = c(\"polynomial\", \"radial\", \"sigmoid\"),\n  degree = c(1, 2, 3)\n)\ngrid <- expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)\nsvm_learners <- apply(grid, MARGIN = 1, function(tuning_params) {\n  do.call(Lrnr_svm$new, as.list(tuning_params))\n})\ngrid_params <- list(\n  max_depth = c(2, 4, 6),\n  eta = c(0.001, 0.1, 0.3),\n  nrounds = 100\n)\ngrid <- expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)\ngrid\n#>   max_depth   eta nrounds\n#> 1         2 0.001     100\n#> 2         4 0.001     100\n#> 3         6 0.001     100\n#> 4         2 0.100     100\n#> 5         4 0.100     100\n#> 6         6 0.100     100\n#> 7         2 0.300     100\n#> 8         4 0.300     100\n#> 9         6 0.300     100\n\nxgb_learners <- apply(grid, MARGIN = 1, function(tuning_params) {\n  do.call(Lrnr_xgboost$new, as.list(tuning_params))\n})\nxgb_learners\n#> [[1]]\n#> [1] \"Lrnr_xgboost_100_1_2_0.001\"\n#> \n#> [[2]]\n#> [1] \"Lrnr_xgboost_100_1_4_0.001\"\n#> \n#> [[3]]\n#> [1] \"Lrnr_xgboost_100_1_6_0.001\"\n#> \n#> [[4]]\n#> [1] \"Lrnr_xgboost_100_1_2_0.1\"\n#> \n#> [[5]]\n#> [1] \"Lrnr_xgboost_100_1_4_0.1\"\n#> \n#> [[6]]\n#> [1] \"Lrnr_xgboost_100_1_6_0.1\"\n#> \n#> [[7]]\n#> [1] \"Lrnr_xgboost_100_1_2_0.3\"\n#> \n#> [[8]]\n#> [1] \"Lrnr_xgboost_100_1_4_0.3\"\n#> \n#> [[9]]\n#> [1] \"Lrnr_xgboost_100_1_6_0.3\"\n# Unlike xgboost, I have no idea how to tune a neural net or BART machine, so\n# I let caret take the reins\nlrnr_caret_nnet <- make_learner(Lrnr_caret, algorithm = \"nnet\")\nlrnr_caret_bartMachine <- make_learner(Lrnr_caret,\n  algorithm = \"bartMachine\",\n  method = \"boot\", metric = \"Accuracy\",\n  tuneLength = 10\n)\nstack <- make_learner(\n  Stack, lrn_glm, lrn_polspline, lrn_enet.5, lrn_ridge, lrn_lasso, xgb_50\n)\nstack\n#> [1] \"Lrnr_glm_TRUE\"                                  \n#> [2] \"Lrnr_polspline_5\"                               \n#> [3] \"Lrnr_glmnet_NULL_deviance_10_0.5_100_TRUE_FALSE\"\n#> [4] \"Lrnr_glmnet_NULL_deviance_10_0_100_TRUE_FALSE\"  \n#> [5] \"Lrnr_glmnet_NULL_deviance_10_1_100_TRUE_FALSE\"  \n#> [6] \"Lrnr_xgboost_50_1\"\n# named vector of learners first\nlearners <- c(\n  lrn_glm, lrn_polspline, lrn_enet.5, lrn_ridge, lrn_lasso, xgb_50\n)\nnames(learners) <- c(\n  \"glm\", \"polspline\", \"enet.5\", \"ridge\", \"lasso\", \"xgboost50\"\n)\n# next make the stack\nstack <- make_learner(Stack, learners)\n# now the names are pretty\nstack\n#> [1] \"glm\"       \"polspline\" \"enet.5\"    \"ridge\"     \"lasso\"     \"xgboost50\"\ncv_stack <- Lrnr_cv$new(stack)\ncv_stack\n#> [1] \"Lrnr_cv\"\n#> [1] \"glm\"       \"polspline\" \"enet.5\"    \"ridge\"     \"lasso\"     \"xgboost50\""},{"path":"sl3.html","id":"screening-algorithms-for-feature-selection","chapter":"4 Super (Machine) Learning","heading":"Screening Algorithms for Feature Selection","text":"can optionally select subset available covariates pass \nvariables modeling algorithm. current set learners \ncan used prescreening covariates included .Lrnr_screener_importance selects num_screen (default = 5) covariates\nbased variable importance ranking provided learner. \nlearner “importance” method can used Lrnr_screener_importance;\ncurrently includes Lrnr_ranger, Lrnr_randomForest, \nLrnr_xgboost.Lrnr_screener_coefs, provides screening covariates based \nmagnitude estimated coefficients (possibly regularized) GLM.\nthreshold (default = 1e-3) defines minimum absolute size \ncoefficients, thus covariates, kept. Also, max_retain argument\ncan optionally provided restrict number selected covariates \nmax_retain.Lrnr_screener_correlation provides covariate screening procedures \nrunning test correlation (Pearson default), selecting (1)\ntop ranked variables (default), (2) variables pvalue lower \npre-specified threshold.Lrnr_screener_augment augments set screened covariates additional\ncovariates included default, even screener \nselect . example use screener included .Let’s consider screening covariates based randomForest variable\nimportance ranking (ordered mean decrease accuracy). select top\n5 important covariates according ranking, can combine\nLrnr_screener_importance Lrnr_ranger (limiting number trees \nsetting ntree = 20).Hang ! think – confess: Bob Ross know 20\ntrees makes lonely forest, shouldn’t consider , \nsacrifices make chapter build time!example format Lrnr_screener_augment included \nclarity.Selecting covariates non-zero lasso coefficients quite common. Let’s\nconstruct Lrnr_screener_coefs screener just , test \n.“pipe” selected covariates modeling algorithm, need \nmake Pipeline, similar one built regression model \ninteraction terms.Now, learners internal screening preceded screening\nstep.also consider original stack, compare feature selection\nmethods perform comparison methods without feature selection.Analogous seen , stack pipeline \noriginal stack together, may use base learners super\nlearner.use default\nmetalearner,\nuses\nLrnr_solnp \nprovide fitting procedures pairing loss\nfunction \nmetalearner\nfunction. \ndefault metalearner selects loss metalearner pairing based outcome\ntype. Note learner can used metalearner.Now made diverse stack base learners, ready make \nSL. SL algorithm fits metalearner validation set\npredictions/losses across folds.can also use Lrnr_cv build SL, cross-validate stack \nlearners compare performance learners stack, cross-validate\nsingle learner (see “Cross-validation” section sl3\nintroductory tutorial).Furthermore, can Define New sl3\nLearners can used\nplaces otherwise use sl3 learners, including\nPipelines, Stacks, SL.Recall discrete SL, cross-validated selector, metalearner \nassigns weight 1 learner lowest cross-validated empirical\nrisk, weight 0 learners. metalearner specification can\ninvoked Lrnr_cv_selector.","code":"\nminiforest <- Lrnr_ranger$new(\n  num.trees = 20, write.forest = FALSE,\n  importance = \"impurity_corrected\"\n)\n\n# learner must already be instantiated, we did this when we created miniforest\nscreen_rf <- Lrnr_screener_importance$new(learner = miniforest, num_screen = 5)\nscreen_rf\n#> [1] \"Lrnr_screener_importance_5\"\n\n# which covariates are selected on the full data?\nscreen_rf$train(washb_task)\n#> [1] \"Lrnr_screener_importance_5\"\n#> $selected\n#> [1] \"aged\"      \"month\"     \"tr\"        \"momheight\" \"momedu\"\nkeepme <- c(\"aged\", \"momage\")\n# screener must already be instantiated, we did this when we created screen_rf\nscreen_augment_rf <- Lrnr_screener_augment$new(\n  screener = screen_rf, default_covariates = keepme\n)\nscreen_augment_rf\n#> [1] \"Lrnr_screener_augment_c(\\\"aged\\\", \\\"momage\\\")\"\n# we already instantiated a lasso learner above, no need to do it again\nscreen_lasso <- Lrnr_screener_coefs$new(learner = lrn_lasso, threshold = 0)\nscreen_lasso\n#> [1] \"Lrnr_screener_coefs_0_NULL_2\"\nscreen_rf_pipe <- make_learner(Pipeline, screen_rf, stack)\nscreen_lasso_pipe <- make_learner(Pipeline, screen_lasso, stack)\n# pretty names again\nlearners2 <- c(learners, screen_rf_pipe, screen_lasso_pipe)\nnames(learners2) <- c(names(learners), \"randomforest_screen\", \"lasso_screen\")\n\nfancy_stack <- make_learner(Stack, learners2)\nfancy_stack\n#> [1] \"glm\"                 \"polspline\"           \"enet.5\"             \n#> [4] \"ridge\"               \"lasso\"               \"xgboost50\"          \n#> [7] \"randomforest_screen\" \"lasso_screen\"\nsl <- make_learner(Lrnr_sl, learners = fancy_stack)\ndiscrete_sl_metalrn <- Lrnr_cv_selector$new()\ndiscrete_sl <- Lrnr_sl$new(\n  learners = fancy_stack,\n  metalearner = discrete_sl_metalrn\n)"},{"path":"sl3.html","id":"train-the-super-learner-on-the-machine-learning-task","chapter":"4 Super (Machine) Learning","heading":"3. Train the Super Learner on the machine learning task","text":"SL algorithm fits metalearner validation-set predictions \ncross-validated manner, thereby avoiding overfitting.Now ready “train” SL sl3_task object, washb_task.","code":"\nset.seed(4197)\nsl_fit <- sl$train(washb_task)"},{"path":"sl3.html","id":"obtain-predicted-values","chapter":"4 Super (Machine) Learning","heading":"4. Obtain predicted values","text":"Now fit SL, ready calculate predicted outcome\nsubject.can also obtain summary results.table printed SL fit, note SL mean risk r round(sl_fit_summary$risk[length(sl_fit_summary$learner)], 4) \nensemble weighted ranger glmnet learners highest \nweighting mean learner highly.can also see glmnet learner lowest cross-validated mean\nrisk, thus making cross-validated selector (discrete SL). \nmean risk SL calculated using data, separate\nhold-, SL’s mean risk reported underestimation.","code":"\n# we did it! now we have SL predictions\nsl_preds <- sl_fit$predict()\nhead(sl_preds)\n#> [1] -0.65442 -0.77055 -0.67359 -0.65109 -0.65577 -0.65673\nsl_fit_summary <- sl_fit$print()\n#> [1] \"SuperLearner:\"\n#> List of 8\n#>  $ glm                : chr \"Lrnr_glm_TRUE\"\n#>  $ polspline          : chr \"Lrnr_polspline_5\"\n#>  $ enet.5             : chr \"Lrnr_glmnet_NULL_deviance_10_0.5_100_TRUE_FALSE\"\n#>  $ ridge              : chr \"Lrnr_glmnet_NULL_deviance_10_0_100_TRUE_FALSE\"\n#>  $ lasso              : chr \"Lrnr_glmnet_NULL_deviance_10_1_100_TRUE_FALSE\"\n#>  $ xgboost50          : chr \"Lrnr_xgboost_50_1\"\n#>  $ randomforest_screen: chr \"Pipeline(Lrnr_screener_importance_5->Stack)\"\n#>  $ lasso_screen       : chr \"Pipeline(Lrnr_screener_coefs_0_NULL_2->Stack)\"\n#> [1] \"Lrnr_solnp_TRUE_TRUE_FALSE_1e-05\"\n#> $pars\n#>  [1] 0.055571 0.055556 0.055564 0.055570 0.055564 0.055591 0.055546 0.055561\n#>  [9] 0.055546 0.055546 0.055546 0.055523 0.055559 0.055559 0.055559 0.055559\n#> [17] 0.055559 0.055521\n#> \n#> $convergence\n#> [1] 0\n#> \n#> $values\n#> [1] 1.0135 1.0135\n#> \n#> $lagrange\n#>            [,1]\n#> [1,] -0.0021608\n#> \n#> $hessian\n#>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n#>  [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0\n#>  [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0\n#>  [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0\n#>  [4,]    0    0    0    1    0    0    0    0    0     0     0     0     0\n#>  [5,]    0    0    0    0    1    0    0    0    0     0     0     0     0\n#>  [6,]    0    0    0    0    0    1    0    0    0     0     0     0     0\n#>  [7,]    0    0    0    0    0    0    1    0    0     0     0     0     0\n#>  [8,]    0    0    0    0    0    0    0    1    0     0     0     0     0\n#>  [9,]    0    0    0    0    0    0    0    0    1     0     0     0     0\n#> [10,]    0    0    0    0    0    0    0    0    0     1     0     0     0\n#> [11,]    0    0    0    0    0    0    0    0    0     0     1     0     0\n#> [12,]    0    0    0    0    0    0    0    0    0     0     0     1     0\n#> [13,]    0    0    0    0    0    0    0    0    0     0     0     0     1\n#> [14,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [15,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [16,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [17,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#> [18,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n#>       [,14] [,15] [,16] [,17] [,18]\n#>  [1,]     0     0     0     0     0\n#>  [2,]     0     0     0     0     0\n#>  [3,]     0     0     0     0     0\n#>  [4,]     0     0     0     0     0\n#>  [5,]     0     0     0     0     0\n#>  [6,]     0     0     0     0     0\n#>  [7,]     0     0     0     0     0\n#>  [8,]     0     0     0     0     0\n#>  [9,]     0     0     0     0     0\n#> [10,]     0     0     0     0     0\n#> [11,]     0     0     0     0     0\n#> [12,]     0     0     0     0     0\n#> [13,]     0     0     0     0     0\n#> [14,]     1     0     0     0     0\n#> [15,]     0     1     0     0     0\n#> [16,]     0     0     1     0     0\n#> [17,]     0     0     0     1     0\n#> [18,]     0     0     0     0     1\n#> \n#> $ineqx0\n#> NULL\n#> \n#> $nfuneval\n#> [1] 23\n#> \n#> $outer.iter\n#> [1] 1\n#> \n#> $elapsed\n#> Time difference of 0.088564 secs\n#> \n#> $vscale\n#>  [1] 1.01351 0.00001 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000\n#> [10] 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000 1.00000\n#> [19] 1.00000 1.00000\n#> \n#> $coefficients\n#>                           glm                     polspline \n#>                      0.055571                      0.055556 \n#>                        enet.5                         ridge \n#>                      0.055564                      0.055570 \n#>                         lasso                     xgboost50 \n#>                      0.055564                      0.055591 \n#>       randomforest_screen_glm randomforest_screen_polspline \n#>                      0.055546                      0.055561 \n#>    randomforest_screen_enet.5     randomforest_screen_ridge \n#>                      0.055546                      0.055546 \n#>     randomforest_screen_lasso randomforest_screen_xgboost50 \n#>                      0.055546                      0.055523 \n#>              lasso_screen_glm        lasso_screen_polspline \n#>                      0.055559                      0.055559 \n#>           lasso_screen_enet.5            lasso_screen_ridge \n#>                      0.055559                      0.055559 \n#>            lasso_screen_lasso        lasso_screen_xgboost50 \n#>                      0.055559                      0.055521 \n#> \n#> $training_offset\n#> [1] FALSE\n#> \n#> $name\n#> [1] \"solnp\"\n#> \n#> [1] \"Cross-validated risk:\"\n#>                           learner coefficients   risk       se  fold_sd\n#>  1:                           glm     0.055571 1.0202 0.023955 0.067500\n#>  2:                     polspline     0.055556 1.0208 0.023577 0.067921\n#>  3:                        enet.5     0.055564 1.0131 0.023598 0.065732\n#>  4:                         ridge     0.055570 1.0153 0.023739 0.065299\n#>  5:                         lasso     0.055564 1.0130 0.023592 0.065840\n#>  6:                     xgboost50     0.055591 1.1136 0.025262 0.077580\n#>  7:       randomforest_screen_glm     0.055546 1.0271 0.024119 0.069913\n#>  8: randomforest_screen_polspline     0.055561 1.0236 0.024174 0.068710\n#>  9:    randomforest_screen_enet.5     0.055546 1.0266 0.024101 0.070117\n#> 10:     randomforest_screen_ridge     0.055546 1.0268 0.024120 0.069784\n#> 11:     randomforest_screen_lasso     0.055546 1.0266 0.024101 0.070135\n#> 12: randomforest_screen_xgboost50     0.055523 1.1399 0.026341 0.100112\n#> 13:              lasso_screen_glm     0.055559 1.0164 0.023542 0.065018\n#> 14:        lasso_screen_polspline     0.055559 1.0177 0.023520 0.065566\n#> 15:           lasso_screen_enet.5     0.055559 1.0163 0.023544 0.065017\n#> 16:            lasso_screen_ridge     0.055559 1.0166 0.023553 0.064869\n#> 17:            lasso_screen_lasso     0.055559 1.0163 0.023544 0.065020\n#> 18:        lasso_screen_xgboost50     0.055521 1.1256 0.025939 0.084270\n#> 19:                  SuperLearner           NA 1.0135 0.023615 0.067434\n#>     fold_min_risk fold_max_risk\n#>  1:       0.89442        1.1200\n#>  2:       0.89892        1.1255\n#>  3:       0.88839        1.1058\n#>  4:       0.88559        1.1063\n#>  5:       0.88842        1.1060\n#>  6:       0.96019        1.2337\n#>  7:       0.90251        1.1326\n#>  8:       0.90167        1.1412\n#>  9:       0.90030        1.1319\n#> 10:       0.90068        1.1311\n#> 11:       0.90043        1.1321\n#> 12:       0.92377        1.2549\n#> 13:       0.90204        1.1156\n#> 14:       0.89742        1.1162\n#> 15:       0.90184        1.1154\n#> 16:       0.90120        1.1146\n#> 17:       0.90183        1.1154\n#> 18:       0.96251        1.2327\n#> 19:       0.88685        1.1102"},{"path":"sl3.html","id":"cross-validated-super-learner","chapter":"4 Super (Machine) Learning","heading":"Cross-validated Super Learner","text":"can cross-validate SL see well SL performs unseen data, \nobtain estimate cross-validated risk SL.estimation procedure requires “outer/external” layer \ncross-validation, also called nested cross-validation, involves setting\naside separate holdout sample don’t use fit SL. external\ncross-validation procedure may also incorporate 10 folds, default\nsl3. However, incorporate 2 outer/external folds \ncross-validation computational efficiency.also need specify loss function evaluate SL. Documentation \navailable loss functions can found sl3 Loss Function\nReference.","code":"\nwashb_task_new <- make_sl3_Task(\n  data = washb_data,\n  covariates = covars,\n  outcome = outcome,\n  folds = origami::make_folds(washb_data, fold_fun = folds_vfold, V = 2)\n)\nCVsl <- CV_lrnr_sl(\n  lrnr_sl = sl_fit, task = washb_task_new, loss_fun = loss_squared_error\n)\nCVsl %>%\n  kable(digits = 4) %>%\n  kableExtra:::kable_styling(fixed_thead = T) %>%\n  scroll_box(width = \"100%\", height = \"300px\")"},{"path":"sl3.html","id":"variable-importance-measures-with-sl3","chapter":"4 Super (Machine) Learning","heading":"Variable Importance Measures with sl3","text":"Variable importance can interesting informative. can also \ncontradictory confusing. Nevertheless, like , \ncollaborators, created variable importance function sl3! sl3\nimportance function returns table variables listed decreasing order\nimportance (.e., important first row).measure importance sl3 based risk ratio, risk difference,\nlearner fit removed, permuted, covariate learner\nfit true covariate, across covariates. manner, larger\nrisk difference, important variable prediction.intuition measure calculates risk (terms \naverage loss predictive accuracy) losing one covariate, keeping\neverything else fixed, compares risk covariate \nlost. risk ratio one, risk difference zero, losing \ncovariate impact, thus important measure. \nacross covariates. stated , can remove covariate \nrefit SL without , just permute covariate (faster, risky)\nhope shuffling distort meaningful information \npresent covariate. idea permuting instead removing saves lot\ntime, also incorporated randomForest variable importance\nmeasures. However, permutation approach risky, importance function\ndefault remove refit.Let’s explore sl3 variable importance measurements washb data.","code":"\nwashb_varimp <- importance(sl_fit, loss = loss_squared_error, type = \"permute\")\nwashb_varimp %>%\n  kable(digits = 4) %>%\n  kableExtra:::kable_styling(fixed_thead = TRUE) %>%\n  scroll_box(width = \"100%\", height = \"300px\")\n# plot variable importance\nimportance_plot(\n  washb_varimp,\n  main = \"sl3 Variable Importance for WASH Benefits Example Data\"\n)"},{"path":"sl3.html","id":"sl3-exercises","chapter":"4 Super (Machine) Learning","heading":"4.1 Exercises","text":"","code":""},{"path":"sl3.html","id":"sl3ex1","chapter":"4 Super (Machine) Learning","heading":"4.1.1 Predicting Myocardial Infarction with sl3","text":"Follow steps predict myocardial infarction (mi) using \navailable covariate data. thank Prof. David Benkeser Emory University \nmaking Cardiovascular Health Study (CHS) data accessible.Create sl3 task, setting myocardial infarction mi outcome \nusing available covariate data.Make library seven relatively fast base learning algorithms (.e., \nconsider BART HAL). Customize hyperparameters one \nlearners. Feel free use learners sl3 SuperLearner. may\nuse base learning library presented .Incorporate least one pipeline feature selection. screener \nlearner(s) can used.Fit metalearning step default metalearner.metalearner base learners, make Super Learner (SL) \ntrain task.Print SL fit calling print() $.Cross-validate SL fit see well performs unseen\ndata. Specify valid loss function evaluate SL.Use importance() function identify “important” predictor \nmyocardial infarction, according sl3 importance metrics.","code":"\n# load the data set\ndb_data <- url(\n  paste0(\n    \"https://raw.githubusercontent.com/benkeser/sllecture/master/\",\n    \"chspred.csv\"\n  )\n)\nchspred <- read_csv(file = db_data, col_names = TRUE)\n\n# take a quick peek\nhead(chspred) %>%\n  kable(digits = 4) %>%\n  kableExtra:::kable_styling(fixed_thead = TRUE) %>%\n  scroll_box(width = \"100%\", height = \"300px\")"},{"path":"sl3.html","id":"sl3ex2","chapter":"4 Super (Machine) Learning","heading":"4.1.2 Predicting Recurrent Ischemic Stroke in an RCT with sl3","text":"exercise, work random sample 5,000 patients \nparticipated International Stroke Trial (IST). data described \nChapter 3.2 tlverse\nhandbook.Train SL predict recurrent stroke DRSISC available covariate\ndata (25 variables). course, can consider feature selection\nmachine learning algorithms. data, outcome \noccasionally missing, sure specify drop_missing_outcome = TRUE\ndefining task.Use SL-based predictions calculate area ROC curve (AUC).Calculate cross-validated AUC evaluate performance \nSL unseen data.covariates predictive 14-day recurrent stroke,\naccording sl3 variable importance measures?","code":"\nist_data <- paste0(\n  \"https://raw.githubusercontent.com/tlverse/\",\n  \"tlverse-handbook/master/data/ist_sample.csv\"\n) %>% fread()\n\n# number 3 help\nist_task_CVsl <- make_sl3_Task(\n  data = ist_data,\n  outcome = \"DRSISC\",\n  covariates = colnames(ist_data)[-which(names(ist_data) == \"DRSISC\")],\n  drop_missing_outcome = TRUE,\n  folds = origami::make_folds(\n    n = sum(!is.na(ist_data$DRSISC)),\n    fold_fun = folds_vfold,\n    V = 5\n  )\n)"},{"path":"sl3.html","id":"concluding-remarks","chapter":"4 Super (Machine) Learning","heading":"4.2 Concluding Remarks","text":"Super Learner (SL) general approach can applied diversity \nestimation prediction problems can defined loss function.Super Learner (SL) general approach can applied diversity \nestimation prediction problems can defined loss function.straightforward plug estimator returned SL \ntarget parameter mapping.\nexample, suppose average treatment effect (ATE) \nbinary treatment intervention:\n\\(\\Psi_0 = \\mathbb{E}_{0,W}[\\mathbb{E}_0(Y \\mid =1,W) -  \\mathbb{E}_0(Y \\mid =0,W)]\\).\nuse SL trained original data (let’s call\nsl_fit) predict outcome subjects \nintervention. need take average difference\ncounterfactual outcomes intervention interest.\nConsidering \\(\\Psi_0\\) , first need two \\(n\\)-length vectors \npredicted outcomes intervention. One vector represent \npredicted outcomes intervention sets subjects \nreceive \\(=1\\), \\(Y_i \\mid A_i=1,W_i\\) \\(=1,\\ldots,n\\). \nvector represent predicted outcomes intervention \nsets subjects receive \\(=0\\), \\(Y_i \\mid A_i=0,W_i\\) \n\\(=1,\\ldots,n\\).\nobtaining vectors counterfactual predicted outcomes, \nneed average take difference order \n“plug-” SL estimator target parameter mapping.\nsl3 current ATE example, achieved \nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task));\nA1_task$data contain 1’s (level pertains \nreceiving treatment) treatment column data (keeping \nelse ), A0_task$data contain 0’s (level\npertains receiving treatment) treatment column \ndata.\nstraightforward plug estimator returned SL \ntarget parameter mapping.example, suppose average treatment effect (ATE) \nbinary treatment intervention:\n\\(\\Psi_0 = \\mathbb{E}_{0,W}[\\mathbb{E}_0(Y \\mid =1,W) -  \\mathbb{E}_0(Y \\mid =0,W)]\\).use SL trained original data (let’s call\nsl_fit) predict outcome subjects \nintervention. need take average difference\ncounterfactual outcomes intervention interest.Considering \\(\\Psi_0\\) , first need two \\(n\\)-length vectors \npredicted outcomes intervention. One vector represent \npredicted outcomes intervention sets subjects \nreceive \\(=1\\), \\(Y_i \\mid A_i=1,W_i\\) \\(=1,\\ldots,n\\). \nvector represent predicted outcomes intervention \nsets subjects receive \\(=0\\), \\(Y_i \\mid A_i=0,W_i\\) \n\\(=1,\\ldots,n\\).obtaining vectors counterfactual predicted outcomes, \nneed average take difference order \n“plug-” SL estimator target parameter mapping.sl3 current ATE example, achieved \nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task));\nA1_task$data contain 1’s (level pertains \nreceiving treatment) treatment column data (keeping \nelse ), A0_task$data contain 0’s (level\npertains receiving treatment) treatment column \ndata.’s worthwhile exercise obtain predicted counterfactual outcomes\ncreate counterfactual sl3 tasks. ’s biased; however, \nplug SL fit target parameter mapping, (e.g., calling result\nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task)) \nestimated ATE. end estimator ATE \noptimized estimation prediction function, ATE!’s worthwhile exercise obtain predicted counterfactual outcomes\ncreate counterfactual sl3 tasks. ’s biased; however, \nplug SL fit target parameter mapping, (e.g., calling result\nmean(sl_fit$predict(A1_task)) - mean(sl_fit$predict(A0_task)) \nestimated ATE. end estimator ATE \noptimized estimation prediction function, ATE!end “analysis day”, want estimator optimized \ntarget estimand interest. ultimately care good job\nestimating \\(\\psi_0\\). SL essential step help us get . \nfact, use counterfactual predicted outcomes explained\nlength . However, SL end estimation procedure.\nSpecifically, Super Learner asymptotically linear\nestimator target estimand; efficient substitution\nestimator. begs question, important estimator \npossess properties?\nasymptotically linear estimator converges estimand \n\\(\\frac{1}{\\sqrt{n}}\\) rate, thereby permitting formal statistical inference\n(.e., confidence intervals \\(p\\)-values).\nSubstitution, plug-, estimators estimand desirable \nrespect local global constraints statistical model\n(e.g., bounds), better finite-sample properties.\nefficient estimator optimal sense lowest\npossible variance, thus precise. estimator efficient\nasymptotically linear influence curve equal \ncanonical gradient.\ncanonical gradient mathematical object specific \ntarget estimand, provides information level \ndifficulty estimation problem. Various canonical gradient \nshown chapters follow.\nPractitioner’s need know calculate canonical\ngradient order understand efficiency use Targeted Maximum\nLikelihood Estimation (TMLE). Metaphorically, need \nYoda order Jedi.\n\nend “analysis day”, want estimator optimized \ntarget estimand interest. ultimately care good job\nestimating \\(\\psi_0\\). SL essential step help us get . \nfact, use counterfactual predicted outcomes explained\nlength . However, SL end estimation procedure.\nSpecifically, Super Learner asymptotically linear\nestimator target estimand; efficient substitution\nestimator. begs question, important estimator \npossess properties?asymptotically linear estimator converges estimand \n\\(\\frac{1}{\\sqrt{n}}\\) rate, thereby permitting formal statistical inference\n(.e., confidence intervals \\(p\\)-values).asymptotically linear estimator converges estimand \n\\(\\frac{1}{\\sqrt{n}}\\) rate, thereby permitting formal statistical inference\n(.e., confidence intervals \\(p\\)-values).Substitution, plug-, estimators estimand desirable \nrespect local global constraints statistical model\n(e.g., bounds), better finite-sample properties.Substitution, plug-, estimators estimand desirable \nrespect local global constraints statistical model\n(e.g., bounds), better finite-sample properties.efficient estimator optimal sense lowest\npossible variance, thus precise. estimator efficient\nasymptotically linear influence curve equal \ncanonical gradient.\ncanonical gradient mathematical object specific \ntarget estimand, provides information level \ndifficulty estimation problem. Various canonical gradient \nshown chapters follow.\nPractitioner’s need know calculate canonical\ngradient order understand efficiency use Targeted Maximum\nLikelihood Estimation (TMLE). Metaphorically, need \nYoda order Jedi.\nefficient estimator optimal sense lowest\npossible variance, thus precise. estimator efficient\nasymptotically linear influence curve equal \ncanonical gradient.canonical gradient mathematical object specific \ntarget estimand, provides information level \ndifficulty estimation problem. Various canonical gradient \nshown chapters follow.Practitioner’s need know calculate canonical\ngradient order understand efficiency use Targeted Maximum\nLikelihood Estimation (TMLE). Metaphorically, need \nYoda order Jedi.TMLE general strategy succeeds constructing efficient \nasymptotically linear plug-estimators.TMLE general strategy succeeds constructing efficient \nasymptotically linear plug-estimators.SL fantastic pure prediction, obtaining initial\nestimate first step TMLE, need second step TMLE \ndesirable statistical properties mentioned .SL fantastic pure prediction, obtaining initial\nestimate first step TMLE, need second step TMLE \ndesirable statistical properties mentioned .chapters follow, focus targeted maximum likelihood\nestimator targeted minimum loss-based estimator, referred \nTMLE.chapters follow, focus targeted maximum likelihood\nestimator targeted minimum loss-based estimator, referred \nTMLE.","code":""},{"path":"sl3.html","id":"appendix","chapter":"4 Super (Machine) Learning","heading":"Appendix","text":"","code":""},{"path":"sl3.html","id":"sl3ex1-sol","chapter":"4 Super (Machine) Learning","heading":"4.2.1 Exercise 1 Solution","text":"potential solution sl3 Exercise 1 – Predicting Myocardial\nInfarction sl3.","code":"\ndb_data <- url(\n  \"https://raw.githubusercontent.com/benkeser/sllecture/master/chspred.csv\"\n)\nchspred <- read_csv(file = db_data, col_names = TRUE)\n\n# make task\nchspred_task <- make_sl3_Task(\n  data = chspred,\n  covariates = head(colnames(chspred), -1),\n  outcome = \"mi\"\n)\n\n# make learners\nglm_learner <- Lrnr_glm$new()\nlasso_learner <- Lrnr_glmnet$new(alpha = 1)\nridge_learner <- Lrnr_glmnet$new(alpha = 0)\nenet_learner <- Lrnr_glmnet$new(alpha = 0.5)\n# curated_glm_learner uses formula = \"mi ~ smoke + beta + waist\"\ncurated_glm_learner <- Lrnr_glm_fast$new(covariates = c(\"smoke, beta, waist\"))\nmean_learner <- Lrnr_mean$new() # That is one mean learner!\nglm_fast_learner <- Lrnr_glm_fast$new()\nranger_learner <- Lrnr_ranger$new()\nsvm_learner <- Lrnr_svm$new()\nxgb_learner <- Lrnr_xgboost$new()\n\n# screening\nscreen_cor <- make_learner(Lrnr_screener_correlation)\nglm_pipeline <- make_learner(Pipeline, screen_cor, glm_learner)\n\n# stack learners together\nstack <- make_learner(\n  Stack,\n  glm_pipeline, glm_learner,\n  lasso_learner, ridge_learner, enet_learner,\n  curated_glm_learner, mean_learner, glm_fast_learner,\n  ranger_learner, svm_learner, xgb_learner\n)\n\n# make and train SL\nsl <- Lrnr_sl$new(\n  learners = stack\n)\nsl_fit <- sl$train(chspred_task)\nsl_fit$print()\n\nCVsl <- CV_lrnr_sl(sl_fit, chspred_task, loss_loglik_binomial)\nCVsl\n\nvarimp <- importance(sl_fit, type = \"permute\")\nvarimp %>%\n  importance_plot(\n    main = \"sl3 Variable Importance for Myocardial Infarction Prediction\"\n  )"},{"path":"sl3.html","id":"sl3ex2-sol","chapter":"4 Super (Machine) Learning","heading":"4.2.2 Exercise 2 Solution","text":"potential solution sl3 Exercise 2 – Predicting Recurrent\nIschemic Stroke RCT sl3.","code":"\nlibrary(ROCR) # for AUC calculation\n\nist_data <- paste0(\n  \"https://raw.githubusercontent.com/tlverse/\",\n  \"tlverse-handbook/master/data/ist_sample.csv\"\n) %>% fread()\n\n# stack\nist_task <- make_sl3_Task(\n  data = ist_data,\n  outcome = \"DRSISC\",\n  covariates = colnames(ist_data)[-which(names(ist_data) == \"DRSISC\")],\n  drop_missing_outcome = TRUE\n)\n\n# learner library\nlrn_glm <- Lrnr_glm$new()\nlrn_lasso <- Lrnr_glmnet$new(alpha = 1)\nlrn_ridge <- Lrnr_glmnet$new(alpha = 0)\nlrn_enet <- Lrnr_glmnet$new(alpha = 0.5)\nlrn_mean <- Lrnr_mean$new()\nlrn_ranger <- Lrnr_ranger$new()\nlrn_svm <- Lrnr_svm$new()\n# xgboost grid\ngrid_params <- list(\n  max_depth = c(2, 5, 8),\n  eta = c(0.01, 0.15, 0.3)\n)\ngrid <- expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)\nparams_default <- list(nthread = getOption(\"sl.cores.learners\", 1))\nxgb_learners <- apply(grid, MARGIN = 1, function(params_tune) {\n  do.call(Lrnr_xgboost$new, c(params_default, as.list(params_tune)))\n})\nlearners <- unlist(list(\n  xgb_learners, lrn_ridge, lrn_mean, lrn_lasso,\n  lrn_glm, lrn_enet, lrn_ranger, lrn_svm\n),\nrecursive = TRUE\n)\n\n# SL\nsl <- Lrnr_sl$new(learners)\nsl_fit <- sl$train(ist_task)\n\n# AUC\npreds <- sl_fit$predict()\nobs <- c(na.omit(ist_data$DRSISC))\nAUC <- performance(prediction(sl_preds, obs), measure = \"auc\")@y.values[[1]]\nplot(performance(prediction(sl_preds, obs), \"tpr\", \"fpr\"))\n\n# CVsl\nist_task_CVsl <- make_sl3_Task(\n  data = ist_data,\n  outcome = \"DRSISC\",\n  covariates = colnames(ist_data)[-which(names(ist_data) == \"DRSISC\")],\n  drop_missing_outcome = TRUE,\n  folds = origami::make_folds(\n    n = sum(!is.na(ist_data$DRSISC)),\n    fold_fun = folds_vfold,\n    V = 5\n  )\n)\nCVsl <- CV_lrnr_sl(sl_fit, ist_task_CVsl, loss_loglik_binomial)\nCVsl\n\n# sl3 variable importance plot\nist_varimp <- importance(sl_fit, type = \"permute\")\nist_varimp %>%\n  importance_plot(\n    main = \"Variable Importance for Predicting Recurrent Ischemic Stroke\"\n  )"},{"path":"tmle3.html","id":"tmle3","chapter":"5 The TMLE Framework","heading":"5 The TMLE Framework","text":"Jeremy Coyle Nima HejaziBased tmle3 R package.","code":""},{"path":"tmle3.html","id":"learn-tmle","chapter":"5 The TMLE Framework","heading":"5.1 Learning Objectives","text":"end chapter, able toUnderstand use TMLE effect estimation.Use tmle3 estimate Average Treatment Effect (ATE).Understand use tmle3 “Specs” objects.Fit tmle3 custom set target parameters.Use delta method estimate transformations target parameters.","code":""},{"path":"tmle3.html","id":"tmle-intro","chapter":"5 The TMLE Framework","heading":"5.2 Introduction","text":"previous chapter sl3 learned estimate regression\nfunction like \\(\\mathbb{E}[Y \\mid X]\\) data. ’s important first step\nlearning data, can use predictive model estimate\nstatistical causal effects?Going back roadmap targeted learning, suppose ’d like \nestimate effect treatment variable \\(\\) outcome \\(Y\\). discussed,\none potential parameter characterizes effect Average Treatment\nEffect (ATE), defined \\(\\psi_0 = \\mathbb{E}_W[\\mathbb{E}[Y \\mid =1,W] - \\mathbb{E}[Y \\mid =0,W]]\\) interpreted difference mean outcome\ntreatment \\(=1\\) \\(=0\\), averaging distribution \ncovariates \\(W\\). ’ll illustrate several potential estimators \nparameter, motivate use TMLE (targeted maximum likelihood\nestimation; targeted minimum loss-based estimation) framework, using \nfollowing example data:small ticks right indicate mean outcomes (averaging \\(W\\))\n\\(=1\\) \\(=0\\) respectively, difference quantity ’d\nlike estimate.hope motivate application TMLE chapter, refer \ninterested reader two Targeted Learning books associated works \nfull technical details.","code":""},{"path":"tmle3.html","id":"substitution-est","chapter":"5 The TMLE Framework","heading":"5.3 Substitution Estimators","text":"can use sl3 fit Super Learner regression model estimate\noutcome regression function \\(\\mathbb{E}_0[Y \\mid ,W]\\), often refer\n\\(\\overline{Q}_0(,W)\\) whose estimate denote \\(\\overline{Q}_n(,W)\\).\nconstruct estimate ATE \\(\\psi_n\\), need “plug-” \nestimates \\(\\overline{Q}_n(,W)\\), evaluated two intervention contrasts,\ncorresponding ATE “plug-” formula:\n\\(\\psi_n = \\frac{1}{n}\\sum(\\overline{Q}_n(1,W)-\\overline{Q}_n(0,W))\\). kind\nestimator called plug-substitution estimator, since accurate\nestimates \\(\\psi_n\\) parameter \\(\\psi_0\\) may obtained substituting\nestimates \\(\\overline{Q}_n(,W)\\) relevant regression functions\n\\(\\overline{Q}_0(,W)\\) .Applying sl3 estimate outcome regression example, can see\nensemble machine learning predictions fit data quite well:solid lines indicate sl3 estimate regression function, \ndotted lines indicating tmle3 updates (described ).substitution estimators intuitive, naively using approach \nSuper Learner estimate \\(\\bar{Q}_0(,W)\\) several limitations. First, Super\nLearner selecting learner weights minimize risk across entire\nregression function, instead “targeting” ATE parameter hope \nestimate, leading biased estimation. , sl3 trying well \nfull regression curve left, instead focusing small ticks \nright. ’s , sampling distribution approach \nasymptotically linear, therefore inference possible.can see limitations illustrated estimates generated \nexample data:see Super Learner, estimates true parameter value (indicated \ndashed vertical line) accurately GLM. However, still less\naccurate TMLE, valid inference possible. contrast, TMLE\nachieves less biased estimator valid inference.","code":""},{"path":"tmle3.html","id":"tmle","chapter":"5 The TMLE Framework","heading":"5.4 Targeted Maximum Likelihood Estimation","text":"TMLE takes initial estimate \\(\\overline{Q}_n(,W)\\) well estimate \npropensity score \\(g_n(\\mid W) = \\mathbb{P}(= 1 \\mid W)\\) produces \nupdated estimate \\(\\overline{Q}^{\\star}_n(,W)\\) “targeted” \nparameter interest. TMLE keeps benefits substitution estimators (\none), augments original, potentially erratic estimates correct \nbias also resulting asymptotically linear (thus normally\ndistributed) estimator accommodates inference via asymptotically consistent\nWald-style confidence intervals.","code":""},{"path":"tmle3.html","id":"tmle-updates","chapter":"5 The TMLE Framework","heading":"5.4.1 TMLE Updates","text":"different types TMLEs (, sometimes, multiple set \ntarget parameters) – , give example algorithm TML\nestimation ATE. \\(\\overline{Q}^{\\star}_n(,W)\\) TMLE-augmented\nestimate \\(f(\\overline{Q}^{\\star}_n(,W)) = f(\\overline{Q}_n(,W)) + \\epsilon \\cdot H_n(,W)\\), \\(f(\\cdot)\\) appropriate link function (e.g.,\n\\(\\text{logit}(x) = \\log\\left(\\frac{x}{1 - x}\\right)\\)), estimate\n\\(\\epsilon_n\\) coefficient \\(\\epsilon\\) “clever covariate” \\(H_n(,W)\\)\ncomputed. form covariate \\(H_n(,W)\\) differs across target\nparameters; case ATE, \\(H_n(,W) = \\frac{}{g_n(\\mid W)} - \\frac{1-}{1-g_n(, W)}\\), \\(g_n(,W) = \\mathbb{P}(=1 \\mid W)\\) \nestimated propensity score, estimator depends initial fit (\nsl3) outcome regression (\\(\\overline{Q}_n\\)) propensity score\n(\\(g_n\\)).several robust augmentations used across tlverse,\nincluding use additional layer cross-validation avoid\n-fitting bias (.e., CV-TMLE) well approaches consistently\nestimating several parameters simultaneously (e.g., points survival\ncurve).","code":""},{"path":"tmle3.html","id":"tmle-infer","chapter":"5 The TMLE Framework","heading":"5.4.2 Statistical Inference","text":"Since TMLE yields asymptotically linear estimator, obtaining statistical\ninference convenient. TML estimator corresponding\n(efficient) influence function (often, “EIF”, short) describes \nasymptotic distribution estimator. using estimated EIF, Wald-style\ninference (asymptotically correct confidence intervals) can constructed\nsimply plugging form EIF initial estimates\n\\(\\overline{Q}^{\\star}_n\\) \\(g_n\\), computing sample standard error.following sections describe simple detailed way \nspecifying estimating TMLE tlverse. designing tmle3, \nsought replicate closely possible general estimation framework\nTMLE, theoretical object relevant TMLE encoded \ncorresponding software object/method. First, present simple\napplication tmle3 WASH Benefits example, go describe\nunderlying objects greater detail.","code":""},{"path":"tmle3.html","id":"easy-bake-example-tmle3-for-ate","chapter":"5 The TMLE Framework","heading":"5.5 Easy-Bake Example: tmle3 for ATE","text":"’ll illustrate basic use TMLE using WASH Benefits data\nintroduced earlier estimating average treatment effect.","code":""},{"path":"tmle3.html","id":"load-the-data","chapter":"5 The TMLE Framework","heading":"5.5.1 Load the Data","text":"’ll use WASH Benefits data earlier chapters:","code":"\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(tmle3)\nlibrary(sl3)\nwashb_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/tlverse-data/master/\",\n    \"wash-benefits/washb_data.csv\"\n  ),\n  stringsAsFactors = TRUE\n)"},{"path":"tmle3.html","id":"define-the-variable-roles","chapter":"5 The TMLE Framework","heading":"5.5.2 Define the variable roles","text":"’ll use common \\(W\\) (covariates), \\(\\) (treatment/intervention), \\(Y\\)\n(outcome) data structure. tmle3 needs know variables dataset\ncorrespond roles. use list character vectors tell\n. call “Node List” corresponds nodes Directed\nAcyclic Graph (DAG), way displaying causal relationships variables.","code":"\nnode_list <- list(\n  W = c(\n    \"month\", \"aged\", \"sex\", \"momage\", \"momedu\",\n    \"momheight\", \"hfiacat\", \"Nlt18\", \"Ncomp\", \"watmin\",\n    \"elec\", \"floor\", \"walls\", \"roof\", \"asset_wardrobe\",\n    \"asset_table\", \"asset_chair\", \"asset_khat\",\n    \"asset_chouki\", \"asset_tv\", \"asset_refrig\",\n    \"asset_bike\", \"asset_moto\", \"asset_sewmach\",\n    \"asset_mobile\"\n  ),\n  A = \"tr\",\n  Y = \"whz\"\n)"},{"path":"tmle3.html","id":"handle-missingness","chapter":"5 The TMLE Framework","heading":"5.5.3 Handle Missingness","text":"Currently, missingness tmle3 handled fairly simple way:Missing covariates median- (continuous) mode- (discrete)\nimputed, additional covariates indicating imputation generated, just\ndescribed sl3 chapter.Missing treatment variables excluded – observations dropped.Missing outcomes efficiently handled automatic calculation (\nincorporation estimators) inverse probability censoring weights\n(IPCW); also known IPCW-TMLE may thought joint\nintervention remove missingness analogous procedure used \nclassical inverse probability weighted estimators.steps implemented process_missing function tmle3:","code":"\nprocessed <- process_missing(washb_data, node_list)\nwashb_data <- processed$data\nnode_list <- processed$node_list"},{"path":"tmle3.html","id":"create-a-spec-object","chapter":"5 The TMLE Framework","heading":"5.5.4 Create a “Spec” Object","text":"tmle3 general, allows components TMLE procedure \nspecified modular way. However, end-users interested \nmanually specifying components. Therefore, tmle3 implements \ntmle3_Spec object bundles set components specification\n(“Spec”) , minimal additional detail, can run end-user.’ll start using one specs, work way \ninternals tmle3.","code":"\nate_spec <- tmle_ATE(\n  treatment_level = \"Nutrition + WSH\",\n  control_level = \"Control\"\n)"},{"path":"tmle3.html","id":"define-the-learners","chapter":"5 The TMLE Framework","heading":"5.5.5 Define the learners","text":"Currently, thing user must define sl3 learners used\nestimate relevant factors likelihood: Q g.takes form list sl3 learners, one likelihood factor\nestimated sl3:, use Super Learner defined previous chapter. future,\nplan include reasonable defaults learners.","code":"\n# choose base learners\nlrnr_mean <- make_learner(Lrnr_mean)\nlrnr_rf <- make_learner(Lrnr_ranger)\n\n# define metalearners appropriate to data types\nls_metalearner <- make_learner(Lrnr_nnls)\nmn_metalearner <- make_learner(\n  Lrnr_solnp, metalearner_linear_multinomial,\n  loss_loglik_multinomial\n)\nsl_Y <- Lrnr_sl$new(\n  learners = list(lrnr_mean, lrnr_rf),\n  metalearner = ls_metalearner\n)\nsl_A <- Lrnr_sl$new(\n  learners = list(lrnr_mean, lrnr_rf),\n  metalearner = mn_metalearner\n)\nlearner_list <- list(A = sl_A, Y = sl_Y)"},{"path":"tmle3.html","id":"fit-the-tmle","chapter":"5 The TMLE Framework","heading":"5.5.6 Fit the TMLE","text":"now everything need fit tmle using tmle3:","code":"\ntmle_fit <- tmle3(ate_spec, washb_data, node_list, learner_list)\nprint(tmle_fit)\n#> A tmle3_Fit that took 1 step(s)\n#>    type                                    param  init_est tmle_est       se\n#> 1:  ATE ATE[Y_{A=Nutrition + WSH}-Y_{A=Control}] -0.005231  0.00812 0.050679\n#>        lower   upper psi_transformed lower_transformed upper_transformed\n#> 1: -0.091208 0.10745         0.00812         -0.091208           0.10745"},{"path":"tmle3.html","id":"evaluate-the-estimates","chapter":"5 The TMLE Framework","heading":"5.5.7 Evaluate the Estimates","text":"can see summary results printing fit object. Alternatively, \ncan extra results summary indexing :","code":"\nestimates <- tmle_fit$summary$psi_transformed\nprint(estimates)\n#> [1] 0.00812"},{"path":"tmle3.html","id":"tmle3-components","chapter":"5 The TMLE Framework","heading":"5.6 tmle3 Components","text":"Now ’ve successfully used spec obtain TML estimate, let’s look\nhood components. spec number functions \ngenerate objects necessary define fit TMLE.","code":""},{"path":"tmle3.html","id":"tmle3_task","chapter":"5 The TMLE Framework","heading":"5.6.1 tmle3_task","text":"First , tmle3_Task, analogous sl3_Task, containing data ’re\nfitting TMLE , well NPSEM generated node_list\ndefined , describing variables relationships.","code":"\ntmle_task <- ate_spec$make_tmle_task(washb_data, node_list)\ntmle_task$npsem\n#> $W\n#> tmle3_Node: W\n#>  Variables: month, aged, sex, momedu, hfiacat, Nlt18, Ncomp, watmin, elec, floor, walls, roof, asset_wardrobe, asset_table, asset_chair, asset_khat, asset_chouki, asset_tv, asset_refrig, asset_bike, asset_moto, asset_sewmach, asset_mobile, momage, momheight, delta_momage, delta_momheight\n#>  Parents: \n#> \n#> $A\n#> tmle3_Node: A\n#>  Variables: tr\n#>  Parents: W\n#> \n#> $Y\n#> tmle3_Node: Y\n#>  Variables: whz\n#>  Parents: A, W"},{"path":"tmle3.html","id":"initial-likelihood","chapter":"5 The TMLE Framework","heading":"5.6.2 Initial Likelihood","text":"Next, object representing likelihood, factorized according \nNPSEM described :components likelihood indicate factors estimated: \nmarginal distribution \\(W\\) estimated using NP-MLE, conditional\ndistributions \\(\\) \\(Y\\) estimated using sl3 fits (defined \nlearner_list) .can use tandem tmle_task object obtain likelihood\nestimates observation:","code":"\ninitial_likelihood <- ate_spec$make_initial_likelihood(\n  tmle_task,\n  learner_list\n)\nprint(initial_likelihood)\n#> W: Lf_emp\n#> A: LF_fit\n#> Y: LF_fit\ninitial_likelihood$get_likelihoods(tmle_task)\n#>                W       A        Y\n#>    1: 0.00021299 0.34925 -0.35834\n#>    2: 0.00021299 0.36117 -0.93261\n#>    3: 0.00021299 0.34740 -0.80873\n#>    4: 0.00021299 0.34248 -0.94020\n#>    5: 0.00021299 0.34134 -0.57866\n#>   ---                            \n#> 4691: 0.00021299 0.23375 -0.58997\n#> 4692: 0.00021299 0.23366 -0.22769\n#> 4693: 0.00021299 0.22660 -0.74235\n#> 4694: 0.00021299 0.28944 -0.91796\n#> 4695: 0.00021299 0.19533 -1.03878"},{"path":"tmle3.html","id":"targeted-likelihood-updater","chapter":"5 The TMLE Framework","heading":"5.6.3 Targeted Likelihood (updater)","text":"also need define “Targeted Likelihood” object. special type\nlikelihood able updated using tmle3_Update object. \nobject defines update strategy (e.g., submodel, loss function, CV-TMLE \n).constructing targeted likelihood, can specify different update\noptions. See documentation tmle3_Update details different\noptions. example, can disable CV-TMLE (default tmle3) \nfollows:","code":"\ntargeted_likelihood <- Targeted_Likelihood$new(initial_likelihood)\ntargeted_likelihood_no_cv <-\n  Targeted_Likelihood$new(initial_likelihood,\n    updater = list(cvtmle = FALSE)\n  )"},{"path":"tmle3.html","id":"parameter-mapping","chapter":"5 The TMLE Framework","heading":"5.6.4 Parameter Mapping","text":"Finally, need define parameters interest. , spec defines \nsingle parameter, ATE. next section, ’ll see add additional\nparameters.","code":"\ntmle_params <- ate_spec$make_params(tmle_task, targeted_likelihood)\nprint(tmle_params)\n#> [[1]]\n#> Param_ATE: ATE[Y_{A=Nutrition + WSH}-Y_{A=Control}]"},{"path":"tmle3.html","id":"putting-it-all-together","chapter":"5 The TMLE Framework","heading":"5.6.5 Putting it all together","text":"used spec manually generate components, can now\nmanually fit tmle3:result equivalent fitting using tmle3 function .","code":"\ntmle_fit_manual <- fit_tmle3(\n  tmle_task, targeted_likelihood, tmle_params,\n  targeted_likelihood$updater\n)\nprint(tmle_fit_manual)\n#> A tmle3_Fit that took 1 step(s)\n#>    type                                    param   init_est tmle_est       se\n#> 1:  ATE ATE[Y_{A=Nutrition + WSH}-Y_{A=Control}] -0.0045451  0.01174 0.050807\n#>       lower   upper psi_transformed lower_transformed upper_transformed\n#> 1: -0.08784 0.11132         0.01174          -0.08784           0.11132"},{"path":"tmle3.html","id":"fitting-tmle3-with-multiple-parameters","chapter":"5 The TMLE Framework","heading":"5.7 Fitting tmle3 with multiple parameters","text":", fit tmle3 just one parameter. tmle3 also supports fitting\nmultiple parameters simultaneously. illustrate , ’ll use \ntmle_TSM_all spec:spec generates Treatment Specific Mean (TSM) level \nexposure variable. Note must first generate new targeted likelihood,\nold one targeted ATE. However, can recycle initial\nlikelihood fit , saving us super learner step.","code":"\ntsm_spec <- tmle_TSM_all()\ntargeted_likelihood <- Targeted_Likelihood$new(initial_likelihood)\nall_tsm_params <- tsm_spec$make_params(tmle_task, targeted_likelihood)\nprint(all_tsm_params)\n#> [[1]]\n#> Param_TSM: E[Y_{A=Control}]\n#> \n#> [[2]]\n#> Param_TSM: E[Y_{A=Handwashing}]\n#> \n#> [[3]]\n#> Param_TSM: E[Y_{A=Nutrition}]\n#> \n#> [[4]]\n#> Param_TSM: E[Y_{A=Nutrition + WSH}]\n#> \n#> [[5]]\n#> Param_TSM: E[Y_{A=Sanitation}]\n#> \n#> [[6]]\n#> Param_TSM: E[Y_{A=WSH}]\n#> \n#> [[7]]\n#> Param_TSM: E[Y_{A=Water}]"},{"path":"tmle3.html","id":"delta-method","chapter":"5 The TMLE Framework","heading":"5.7.1 Delta Method","text":"can also define parameters based Delta Method Transformations \nparameters. instance, can estimate ATE using delta method two\nTSM parameters:can similarly used estimate derived parameters like Relative\nRisks, Population Attributable Risks","code":"\nate_param <- define_param(\n  Param_delta, targeted_likelihood,\n  delta_param_ATE,\n  list(all_tsm_params[[1]], all_tsm_params[[4]])\n)\nprint(ate_param)\n#> Param_delta: E[Y_{A=Nutrition + WSH}] - E[Y_{A=Control}]"},{"path":"tmle3.html","id":"fit","chapter":"5 The TMLE Framework","heading":"5.7.2 Fit","text":"can now fit TMLE simultaneously TSM parameters, well \ndefined ATE parameter","code":"\nall_params <- c(all_tsm_params, ate_param)\n\ntmle_fit_multiparam <- fit_tmle3(\n  tmle_task, targeted_likelihood, all_params,\n  targeted_likelihood$updater\n)\n\nprint(tmle_fit_multiparam)\n#> A tmle3_Fit that took 1 step(s)\n#>    type                                       param   init_est  tmle_est\n#> 1:  TSM                            E[Y_{A=Control}] -0.5959678 -0.620830\n#> 2:  TSM                        E[Y_{A=Handwashing}] -0.6188184 -0.660230\n#> 3:  TSM                          E[Y_{A=Nutrition}] -0.6111402 -0.606586\n#> 4:  TSM                    E[Y_{A=Nutrition + WSH}] -0.6005128 -0.608949\n#> 5:  TSM                         E[Y_{A=Sanitation}] -0.5857464 -0.578472\n#> 6:  TSM                                E[Y_{A=WSH}] -0.5205610 -0.448252\n#> 7:  TSM                              E[Y_{A=Water}] -0.5657364 -0.537709\n#> 8:  ATE E[Y_{A=Nutrition + WSH}] - E[Y_{A=Control}] -0.0045451  0.011881\n#>          se     lower    upper psi_transformed lower_transformed\n#> 1: 0.029901 -0.679435 -0.56223       -0.620830         -0.679435\n#> 2: 0.041719 -0.741998 -0.57846       -0.660230         -0.741998\n#> 3: 0.042047 -0.688996 -0.52418       -0.606586         -0.688996\n#> 4: 0.041285 -0.689867 -0.52803       -0.608949         -0.689867\n#> 5: 0.042396 -0.661566 -0.49538       -0.578472         -0.661566\n#> 6: 0.045506 -0.537442 -0.35906       -0.448252         -0.537442\n#> 7: 0.039253 -0.614644 -0.46077       -0.537709         -0.614644\n#> 8: 0.050801 -0.087688  0.11145        0.011881         -0.087688\n#>    upper_transformed\n#> 1:          -0.56223\n#> 2:          -0.57846\n#> 3:          -0.52418\n#> 4:          -0.52803\n#> 5:          -0.49538\n#> 6:          -0.35906\n#> 7:          -0.46077\n#> 8:           0.11145"},{"path":"tmle3.html","id":"exercises-2","chapter":"5 The TMLE Framework","heading":"5.8 Exercises","text":"","code":""},{"path":"tmle3.html","id":"tmle3-ex1","chapter":"5 The TMLE Framework","heading":"5.8.1 Estimation of the ATE with tmle3","text":"Follow steps estimate average treatment effect using data \nCollaborative Perinatal Project (CPP), available sl3 package. \nsimplify example, define binary intervention variable, parity01 –\nindicator one children current child \nbinary outcome, haz01 – indicator average height \nage.Define variable roles \\((W,,Y)\\) creating list nodes.\nInclude following baseline covariates \\(W\\): apgar1, apgar5,\ngagebrth, mage, meducyrs, sexn. \\(\\) \\(Y\\) specified\n.Define tmle3_Spec object ATE, tmle_ATE().Using base learning libraries defined , specify sl3 base\nlearners estimation \\(\\overline{Q}_0 = \\mathbb{E}_0(Y \\mid ,Y)\\) \n\\(g_0 = \\mathbb{P}(= 1 \\mid W)\\).Define metalearner like .Define one super learner estimating \\(\\overline{Q}_0\\) another \nestimating \\(g_0\\). Use metalearner super learners.Create list two super learners defined step call\nobject learner_list. list names (defining super\nlearner estimation \\(g_0\\)) Y (defining super learner \nestimation \\(\\overline{Q}_0\\)).Fit TMLE tmle3 function specifying (1) tmle3_Spec,\ndefined Step 2; (2) data; (3) list nodes, \nspecified Step 1; (4) list super learners estimation \n\\(g_0\\) \\(\\overline{Q}_0\\), defined Step 6. Note: Like ,\nneed explicitly make copy data (work around\ndata.table optimizations), e.g., (cpp2 <- data.table::copy(cpp)), \nuse cpp2 data going forward.","code":"\n# load the data set\ndata(cpp)\ncpp <- cpp %>%\n  as_tibble() %>%\n  dplyr::filter(!is.na(haz)) %>%\n  mutate(\n    parity01 = as.numeric(parity > 0),\n    haz01 = as.numeric(haz > 0)\n  )\nmetalearner <- make_learner(\n  Lrnr_solnp,\n  loss_function = loss_loglik_binomial,\n  learner_function = metalearner_logistic_binomial\n)"},{"path":"tmle3.html","id":"tmle3-ex2","chapter":"5 The TMLE Framework","heading":"5.8.2 Estimation of Strata-Specific ATEs with tmle3","text":"exercise, work random sample 5,000 patients \nparticipated International Stroke Trial (IST). data described \nChapter 3.2 tlverse handbook. included data \nsummarized description relevant exercise.outcome, \\(Y\\), indicates recurrent ischemic stroke within 14 days \nrandomization (DRSISC); treatment interest, \\(\\), randomized\naspirin vs. aspirin treatment allocation (RXASP ist); \nadjustment set, \\(W\\), consists simply variables measured baseline. \ndata, outcome occasionally missing, need create \nvariable indicating missingness (\\(\\Delta\\)) analyses \ntlverse, since missingness automatically detected NA present\noutcome. Covariates missing values (RATRIAL, RASP3 RHEP24)\nalready imputed. Additional covariates created\n(MISSING_RATRIAL_RASP3 MISSING_RHEP24), indicate whether \ncovariate imputed. missingness identical RATRIAL \nRASP3, one covariate indicating imputation two\ncovariates created.Estimate average effect randomized asprin treatment (RXASP = 1) \nrecurrent ischemic stroke. Even though missingness mechanism \\(Y\\),\n\\(\\Delta\\), need specified node list, still need\naccounted TMLE. words, estimation problem,\n\\(\\Delta\\) relevant factor likelihood. Thus, defining \nlist sl3 learners likelihood factor, sure include list\nlearners estimation \\(\\Delta\\), say sl_Delta, specify \nlearner list, like \nlearner_list <- list(= sl_A, delta_Y = sl_Delta, Y = sl_Y).Recall RCT conducted internationally. Suposse concern\ndose asprin may varied across geographical regions, \naverage across geographical regions may warranted. Calculate \nstrata specific ATEs according geographical region (REGION).","code":"\nist_data <- fread(\n  paste0(\n    \"https://raw.githubusercontent.com/tlverse/deming2019-workshop/\",\n    \"master/data/ist_sample.csv\"\n  )\n)"},{"path":"tmle3.html","id":"summary","chapter":"5 The TMLE Framework","heading":"5.9 Summary","text":"tmle3 general purpose framework generating TML estimates. easiest\nway use use predefined spec, allowing just fill \nblanks data, variable roles, sl3 learners. However, digging \nhood allows users specify wide range TMLEs. next sections,\n’ll see framework can used estimate advanced parameters \noptimal treatments stochastic shift interventions.","code":""},{"path":"r6.html","id":"r6","chapter":"6 A Primer on the R6 Class System","heading":"6 A Primer on the R6 Class System","text":"central goal Targeted Learning statistical paradigm estimate\nscientifically relevant parameters realistic (usually nonparametric) models.tlverse designed using basic OOP principles R6 OOP framework.\n’ve tried make easy use tlverse packages without worrying\nmuch OOP, helpful intuition tlverse \nstructured. , briefly outline key concepts OOP. Readers\nfamiliar OOP basics invited skip section.","code":""},{"path":"r6.html","id":"classes-fields-and-methods","chapter":"6 A Primer on the R6 Class System","heading":"6.1 Classes, Fields, and Methods","text":"key concept OOP object, collection data functions\ncorresponds conceptual unit. Objects two main types \nelements:fields, can thought nouns, information object,\nandmethods, can thought verbs, actions object can\nperform.Objects members classes, define specific fields \nmethods . Classes can inherit elements classes (sometimes called\nbase classes) – accordingly, classes similar, exactly \n, can share parts definitions.Many different implementations OOP exist, variations \nconcepts implemented used. R several different implementations,\nincluding S3, S4, reference classes, R6. tlverse uses R6\nimplementation. R6, methods fields class object accessed using\n$ operator. thorough introduction R6, see https://adv-r.hadley.nz/r6.html, Hadley Wickham’s Advanced\nR (???).","code":""},{"path":"r6.html","id":"object-oriented-programming-python-and-r","chapter":"6 A Primer on the R6 Class System","heading":"6.2 Object Oriented Programming: Python and R","text":"OO concepts (classes inherentence) baked Python first\npublished version (version 0.9 1991). contrast, R gets OO “approach”\npredecessor, S, first released 1976. first 15 years, S\nsupport classes, , suddenly, S got two OO frameworks bolted \nrapid succession: informal classes S3 1991, formal classes \nS4 1998. process continues, new OO frameworks periodically\nreleased, try improve lackluster OO support R, reference\nclasses (R5, 2010) R6 (2014). , R6 behaves like Python\nclasses (also like OOP focused languages like C++ Java), including\nmethod definitions part class definitions, allowing objects \nmodified reference.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
